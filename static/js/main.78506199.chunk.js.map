{"version":3,"sources":["components/StyledComponents/Section.tsx","api/profileAPI.ts","redux/profileReducer.ts","components/StyledComponents/Container.tsx","redux/dialogsReducer.ts","components/Users/User/user.module.css","api/api.ts","components/StyledComponents/Li.tsx","api/authAPI.ts","api/securityAPI.ts","redux/authReducer.ts","assets/images/logo.png","components/StyledComponents/StyledINavItem/NavItemProfile.tsx","components/StyledComponents/StyledINavItem/NavItemUsers.tsx","components/StyledComponents/StyledINavItem/NavItemMessages.tsx","components/StyledComponents/StyledINavItem/NavItemNews.tsx","components/StyledComponents/StyledINavItem/NavItemMusic.tsx","components/StyledComponents/StyledINavItem/NavItemSettings.tsx","components/StyledComponents/Exit.tsx","components/StyledComponents/Entrance.tsx","components/Navbar/Navbar.tsx","utils/helpers/objectHelpers.ts","api/usersAPI.ts","redux/usersReducer.ts","components/common/Paginator/Paginator.tsx","components/Users/User/User.tsx","components/Users/Users.tsx","redux/usersSelectors.ts","components/Users/UsersContainer.tsx","components/Login/Login.tsx","redux/sidebarReducer.ts","redux/appReducer.ts","redux/reduxStore.ts","App.tsx","hoc/withSuspense.tsx","index.tsx","components/StyledComponents/Button.tsx","components/common/FormsControls/FormsControls.tsx","components/common/FormsControls/FormControls.module.css","components/StyledComponents/TitleSection.tsx","utils/validators/validators.ts","components/StyledComponents/Flex.tsx","components/common/Paginator/Paginator.module.css","assets/images/user.png"],"names":["Section","props","StyledSection","styled","div","height","background","profileAPI","userId","instance","get","then","res","data","status","put","photoFile","formData","FormData","append","headers","profile","initialState","posts","id","message","likesCount","actions","addPostActionCreator","newPostText","type","setUserProfile","setStatus","deletePost","postId","savePhotoSuccess","photos","getUserProfile","dispatch","a","getStatus","updateStatus","resultCode","savePhoto","file","saveProfile","getState","auth","Error","stopSubmit","messages","Promise","reject","profileReducer","state","action","newPost","filter","p","Container","StyledContainer","position","left","right","margin","padding","width","maxWidth","dialogs","name","sendMessage","newMessageBody","dialogsReducer","body","module","exports","ResultCodesEnum","ResultCodeForCaptchaEnum","axios","create","baseURL","withCredentials","Li","StyledLi","li","borderRadius","backgroundActive","active","css","authAPI","email","password","rememberMe","captcha","post","delete","securityAPI","login","isAuth","captchaUrl","payload","getAuthUserData","meData","Success","getCaptchaUrl","url","authReducer","NavItemProfile","Flex","align","StyledWrapperIcon","version","xmlns","x","y","fill","viewBox","d","TitleNavItem","span","NavItemUsers","NavItemMessages","cx","cy","r","NavItemNews","NavItemMusic","NavItemSettings","Exit","Entrance","justify","connect","color","app","theme","global","sidebar","backgroundSecondary","button","backgroundDisabled","colorDisabled","logout","profileActive","useState","isActiveSectionsObj","setSectionToggle","onToggleSection","sectionName","arrayNames","Object","keys","newState","forEach","el","StyledNav","direction","StyledLogoLink","href","onClick","to","users","disabled","StyledLogProf","StyledLogoutButton","StyledLoginButton","nav","logo","updateObjectInArray","items","itemId","objPropName","newObjProps","map","i","usersAPI","getUsers","currentPage","pageSize","follow","unfollow","totalUsersCount","isFetching","followingInProgress","count","_followUnfollowFlow","apiMethod","actionCreator","usersReducer","followed","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","Button","className","styles","selectedPage","pageNumber","e","User","user","backgroundUser","boxShadow","src","small","userPhoto","alt","StyledName","StyledStatus","some","Users","u","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","requestUsers","this","TitleSection","title","React","Component","compose","section","bind","page","totalCount","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","Field","component","Input","placeholder","validate","required","Checkbox","StyledRememberWrapper","StyledCaptcha","formSummaryError","loginData","CaptchaIsRequired","length","_error","StyledLoginWrapper","StyledAdditionalInfoWrapper","img","sidebarReducer","initialized","appReducer","rootReducers","combineReducers","profilePage","dialogsPage","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","WrappedComponent","Global","createGlobalStyle","DialogsContainer","lazy","SuspenseProfile","Suspense","fallback","App","initializeApp","from","path","render","AppContainer","withRouter","promise","all","SamuraiJSApp","ReactDOM","StrictMode","document","getElementById","StyledButton","FormControl","meta","touched","children","hasError","formControl","StyledMessageErrorWrapper","input","restProps","mapStateToProps","StyledInput","Textarea","StyledTextarea","textarea","StyledTitle","h2","value","maxLengthCreator","maxLength","values","StyledFlex"],"mappings":"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","file":"static/js/main.78506199.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\n\r\nconst Section: React.FC<PropsType> = (props) => {\r\n    return <StyledSection {...props} />\r\n};\r\n\r\nexport default Section;\r\n\r\n// Type (TS)\r\n// Общий тип\r\ntype PropsType = {} & StyledSectionType\r\n\r\n// Style\r\ntype StyledSectionType = {\r\n    height?: string\r\n    background?: string\r\n}\r\n\r\nconst StyledSection = styled.div<StyledSectionType>`\r\n  height: ${props => props.height};\r\n  background-color: ${props => props.background};\r\n`","import {PhotosType, ProfileType} from \"../types/types\";\r\nimport {instance, APIResponseType} from \"./api\";\r\n\r\n// Type (TS)\r\ntype SavePhotoResponseDataType = {\r\n    photos: PhotosType\r\n}\r\n\r\n// API\r\nexport const profileAPI = {\r\n    // Profile\r\n    getProfile(userId: number) {\r\n        return instance.get<ProfileType>(`profile/${userId}`).then(res => res.data);\r\n    },\r\n\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/${userId}`).then(res => res.data);\r\n    },\r\n\r\n    updateStatus(status: string) {\r\n        return instance.put<APIResponseType>(`profile/status`, {status: status}).then(res => res.data);\r\n\r\n    },\r\n\r\n    savePhoto(photoFile: File) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put<APIResponseType<SavePhotoResponseDataType>>(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(res => res.data);\r\n    },\r\n\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put<APIResponseType>(`profile`, profile).then(res => res.data);\r\n    }\r\n};","import {FormAction, stopSubmit} from \"redux-form\";\r\nimport {PhotosType, PostType, ProfileType} from \"../types/types\";\r\n// import {usersAPI} from \"../api/usersAPI\";\r\nimport {profileAPI} from \"../api/profileAPI\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./reduxStore\";\r\n\r\n\r\n// const ADD_POST = 'SN/PROFILE/ADD-POST';\r\n// // const UPDATE_NEW_POST_TEXT = 'SN/PROFILE/UPDATE-NEW-POST-TEXT'; // Старая версия (*)\r\n// const SET_USER_PROFILE = 'SN/PROFILE/SET-USER-PROFILE';\r\n// const SET_STATUS = 'SN/PROFILE/SET-STATUS';\r\n// const DELETE_POST = 'SN/PROFILE/DELETE-POST';\r\n// const SAVE_PHOTO_SUCCESS = 'SN/PROFILE/SAVE-PHOTO-SUCCESS';\r\n\r\n// Type (TS)\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11}\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: ''\r\n};\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\n// Reducer\r\nconst profileReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/PROFILE/ADD-POST': {\r\n            let newPost = {\r\n                id: 5,\r\n                // message: state.newPostText, // Старая версия (*)\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                // newPostText: '' // Старая версия (*)\r\n            };\r\n        }\r\n\r\n        // Старая версия\r\n        // case UPDATE_NEW_POST_TEXT: {\r\n        //     return {\r\n        //         ...state,\r\n        //         newPostText: action.newText\r\n        //     };\r\n        // };\r\n\r\n        case 'SN/PROFILE/SET-USER-PROFILE': {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case 'SN/PROFILE/SET-STATUS': {\r\n            return {...state, status: action.status}\r\n        }\r\n\r\n        case 'SN/PROFILE/DELETE-POST': {\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        }\r\n\r\n        case 'SN/PROFILE/SAVE-PHOTO-SUCCESS': {\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n        }\r\n\r\n        default :\r\n            return state;\r\n    }\r\n};\r\n\r\n// Action creators\r\nexport const actions = {\r\n    addPostActionCreator: (newPostText: string) => ({type: 'SN/PROFILE/ADD-POST', newPostText} as const),\r\n    setUserProfile: (profile: ProfileType) => ({type: 'SN/PROFILE/SET-USER-PROFILE', profile} as const),\r\n    setStatus: (status: string) => ({type: 'SN/PROFILE/SET-STATUS', status} as const),\r\n    deletePost: (postId: number) => ({type: 'SN/PROFILE/DELETE-POST', postId} as const),\r\n    savePhotoSuccess: (photos: PhotosType) => ({type: 'SN/PROFILE/SAVE-PHOTO-SUCCESS', photos} as const)\r\n}\r\n// export const updateNewPostTextActionCreator = (text) => ({type: UPDATE_NEW_POST_TEXT, newText: text}); // Старая версия (*)\r\n\r\n// Type (TS) Action Type\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\n\r\n// Thunk creators\r\n// Type (TS) Thunk\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>\r\n\r\nexport const getUserProfile = (userId: number): ThunkType => async (dispatch) => {\r\n    const data = await profileAPI.getProfile(userId);\r\n\r\n    dispatch(actions.setUserProfile(data));\r\n};\r\n\r\nexport const getStatus = (userId: number): ThunkType => async (dispatch) => {\r\n    try {\r\n        const data = await profileAPI.getStatus(userId);\r\n\r\n        dispatch(actions.setStatus(data));\r\n    } catch (error) {\r\n        // Перехват ошибки\r\n    }\r\n\r\n};\r\n\r\nexport const updateStatus = (status: string): ThunkType => async (dispatch) => {\r\n    const data = await profileAPI.updateStatus(status);\r\n\r\n    if (data.resultCode === 0) {\r\n        dispatch(actions.setStatus(status));\r\n    };\r\n};\r\n\r\nexport const savePhoto = (file: File): ThunkType => async (dispatch) => {\r\n    const data = await profileAPI.savePhoto(file);\r\n\r\n    if(data.resultCode === 0 ) {\r\n        dispatch(actions.savePhotoSuccess(data.data.photos));\r\n    };\r\n};\r\n\r\nexport const saveProfile = (profile: ProfileType): ThunkType => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n\r\n    const data = await profileAPI.saveProfile(profile);\r\n\r\n    if (data.resultCode === 0 ) {\r\n        if (userId !== null) {\r\n            dispatch(getUserProfile(userId));\r\n        } else {\r\n            throw new Error(\"userId can't be null\")\r\n        }\r\n\r\n    } else {\r\n        dispatch(stopSubmit('edit-profile', {\"contacts\": {\"facebook\": data.messages[0]}}));\r\n        return Promise.reject(data.messages[0]);\r\n    }\r\n};\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport styled, {css} from \"styled-components\";\r\n\r\n\r\nconst Container: React.FC<PropsType> = (props) => {\r\n    return <StyledContainer {...props} />\r\n};\r\n\r\nexport default Container;\r\n\r\n// Type (TS)\r\n// Общий тип\r\ntype PropsType = {} & StyledContainerType\r\n\r\n// Style\r\ntype StyledContainerType = {\r\n    position?: string\r\n    left?: string\r\n    right?: string\r\n\r\n    margin?: string\r\n    padding?: string\r\n    height?: string\r\n    width?: string\r\n    maxWidth?: string\r\n}\r\n\r\nconst StyledContainer = styled.div<StyledContainerType>`\r\n  position: ${props => props.position};\r\n  left: ${props => props.left};\r\n  right: ${props => props.right};\r\n\r\n  flex-grow: 1;\r\n  \r\n  margin: ${props => props.margin};\r\n  padding: ${props => props.padding};\r\n  height: ${props => props.height};\r\n  width: ${props => props.width};\r\n  max-width: ${props => props.maxWidth};\r\n`\r\n\r\n\r\n\r\n\r\n","import {InferActionsTypes} from \"./reduxStore\";\r\n\r\n// const SEND_MESSAGE = 'SN/DIALOGS/SEND-MESSAGE';\r\n\r\n// Type (TS)\r\ntype DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\ntype MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\n//\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Kate'},\r\n        // {id: 2, name: 'Viktor'},\r\n        // {id: 3, name: 'Alex'},\r\n        // {id: 4, name: 'Timur'}\r\n    ] as Array<DialogType>,\r\n\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is are your?'}\r\n    ] as Array<MessageType>\r\n};\r\n\r\n// Type (TS) (второй способ типизации)\r\nexport type InitialStateType = typeof initialState\r\n\r\n// Reducer\r\nconst dialogsReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/DIALOGS/SEND-MESSAGE':\r\n            let body = action.newMessageBody;\r\n\r\n            return  {...state, messages: [...state.messages, {id: 12, message: body}]};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Type (TS)\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\nexport const actions = {\r\n    sendMessage: (newMessageBody: string) => ({type: 'SN/DIALOGS/SEND-MESSAGE', newMessageBody} as const)\r\n}\r\n\r\nexport default  dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"user_userPhoto__sqLFn\",\"selectedPage\":\"user_selectedPage__5J-Pq\",\"paginationWrapper\":\"user_paginationWrapper__1Q_Pl\"};","// DAL (Data Access Layer)\r\nimport axios from \"axios\";\r\nimport { UserType } from \"../types/types\";\r\n\r\n// Шаблон для API\r\nexport const instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"797821ca-5e62-4458-9aa9-8c6476b8b275\"\r\n    }\r\n});\r\n\r\n\r\n// TypeAPI (TS)\r\nexport enum ResultCodesEnum {\r\n    Success = 0,\r\n    Error = 1\r\n}\r\n\r\nexport enum ResultCodeForCaptchaEnum {\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\n\r\nexport type GetItemsType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: string | null\r\n}\r\n\r\nexport type APIResponseType<D = {}, RC = ResultCodesEnum> = {\r\n    data: D\r\n    resultCode: RC\r\n    messages: Array<string>\r\n}\r\n","import React from 'react';\r\nimport styled, {css} from \"styled-components\";\r\n\r\n\r\nconst Li: React.FC<PropsType> = (props) => {\r\n    return <StyledLi {...props} />\r\n};\r\n\r\nexport default Li;\r\n\r\n// Type (TS)\r\n// Общий тип\r\ntype PropsType = {} & StyledLiType\r\n\r\n// Style\r\ntype StyledLiType = {\r\n    active?: boolean,\r\n    disabled?: boolean,\r\n\r\n    margin?:  string\r\n    padding?: string\r\n    borderRadius?: string\r\n    backgroundActive?: string,\r\n    backgroundDisabled?: string\r\n}\r\n\r\nconst StyledLi = styled.li<StyledLiType>`\r\n  display: block;\r\n  margin: ${props => props.margin};\r\n  padding: ${props => props.padding};\r\n  border-radius: ${props => props.borderRadius};\r\n  background-color: transparent;\r\n  \r\n  &:hover {\r\n    background-color: ${props => props.backgroundActive};\r\n  }\r\n  \r\n  ${props => props.active && css<StyledLiType>`\r\n    box-shadow: -2px 0 0 0 #f44336;\r\n    background-color: ${props => props.backgroundActive};\r\n  `};\r\n`","import {instance, ResultCodeForCaptchaEnum, ResultCodesEnum, APIResponseType} from \"./api\";\r\n\r\n// Type (TS)\r\ntype MeResponseDataType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n\r\n}\r\n\r\ntype LoginResponseDataType = {\r\n    userId: number\r\n}\r\n\r\n\r\n// API\r\nexport const authAPI = {\r\n    // Header\r\n    me() {\r\n        return instance.get<APIResponseType<MeResponseDataType>>(`auth/me`).then(res => res.data);\r\n    },\r\n\r\n    // Логинизация и выход\r\n    login(email: string, password: string, rememberMe = false, captcha: null | string = null) {\r\n        return instance.post<APIResponseType<LoginResponseDataType, ResultCodesEnum | ResultCodeForCaptchaEnum>>(`auth/login`, {email, password, rememberMe, captcha})\r\n            .then(res => res.data);\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete(`auth/login`).then(res => res.data);\r\n    }\r\n};","import {instance} from \"./api\";\r\n\r\n// Type (TS)\r\ntype GetCaptchaUrlResponseType = {\r\n    url: string\r\n}\r\n\r\n// API\r\nexport const securityAPI = {\r\n    // Captcha\r\n    getCaptchaUrl() {\r\n        return instance.get<GetCaptchaUrlResponseType>(`security/get-captcha-url`).then(res => res.data);\r\n    }\r\n\r\n};","import {ResultCodeForCaptchaEnum, ResultCodesEnum} from \"../api/api\";\r\nimport {FormAction, stopSubmit} from \"redux-form\";\r\nimport {authAPI} from \"../api/authAPI\";\r\nimport {securityAPI} from \"../api/securityAPI\";\r\nimport {BaseThunkType, InferActionsTypes} from \"./reduxStore\";\r\n\r\n// const SET_USER_DATA = 'SN/AUTH/SET-USER-DATA';\r\n// const GET_CAPTCHA_URL_SUCCESS = 'SN/AUTH/GET-CAPTCHA-URL-SUCCESS';\r\n\r\n\r\nlet initialState = {\r\n    userId: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null // Если null, тогда captcha не обязательна\r\n};\r\n\r\n// Type (TS)\r\nexport type InitialStateType = typeof initialState\r\n\r\n// Reducer\r\nconst authReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"SN/AUTH/SET-USER-DATA\":\r\n        case 'SN/AUTH/GET-CAPTCHA-URL-SUCCESS':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n\r\n        default :\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n// Action Creator (AC)\r\n// Type (TS) AC\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\nexport const actions = {\r\n    setAuthUserData: (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n        type: 'SN/AUTH/SET-USER-DATA',\r\n        payload: {userId, email, login, isAuth}\r\n    } as const),\r\n\r\n    getCaptchaUrlSuccess: (captchaUrl: null | string) => ({\r\n        type: 'SN/AUTH/GET-CAPTCHA-URL-SUCCESS',\r\n        payload: {captchaUrl}\r\n    } as const)\r\n}\r\n\r\n\r\n// Thunks creators\r\n// Type (TS) Thunk\r\ntype ThunkType = BaseThunkType<ActionsType | FormAction>\r\n\r\nexport const getAuthUserData = (): ThunkType => async (dispatch) => {\r\n    // Возвращение общего promise (me + then) для инициализации, код также выполняет свои действия*\r\n    let meData = await authAPI.me();\r\n\r\n    if (meData.resultCode === ResultCodesEnum.Success) {\r\n        let {id, login, email} = meData.data;\r\n        dispatch(actions.setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\n// Логинизация, captcha и выход\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType => async (dispatch) => {\r\n    let loginData = await authAPI.login(email, password, rememberMe, captcha);\r\n\r\n    if (loginData.resultCode === ResultCodesEnum.Success) {\r\n        // Dispatch thunk\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if (loginData.resultCode === ResultCodeForCaptchaEnum.CaptchaIsRequired) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n\r\n        // Обработка серверной валидации с redux-form\r\n        let message = loginData.messages.length > 0 ? loginData.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message})); // Dispatch action creator (AC) stopSubmit\r\n    }\r\n\r\n};\r\n\r\nexport const getCaptchaUrl = (): ThunkType => async (dispatch) => {\r\n    const data = await securityAPI.getCaptchaUrl();\r\n\r\n    const captchaUrl = data.url;\r\n\r\n    dispatch(actions.getCaptchaUrlSuccess(captchaUrl));\r\n};\r\n\r\nexport const logout = (): ThunkType => async (dispatch) => {\r\n    let logoutData = await authAPI.logout();\r\n\r\n    if (logoutData.resultCode === ResultCodesEnum.Success) {\r\n        // Dispatch thunk\r\n        dispatch(actions.setAuthUserData(null, null, null, false));\r\n    }\r\n};\r\n\r\n\r\nexport default authReducer;","export default __webpack_public_path__ + \"static/media/logo.c7e746a5.png\";","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport Flex from \"../Flex\";\r\nimport Container from \"../Container\";\r\n\r\n// Type (TS)\r\ntype PropsType = { fill?: string }\r\n\r\nconst NavItemProfile: React.FC<PropsType> = (props) => {\r\n\r\n\treturn (\r\n\t\t<Container padding='20px 25px'>\r\n\t\t\t<Flex align='center'>\r\n\t\t\t\t<StyledWrapperIcon>\r\n\t\t\t\t\t<svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" fill={props.fill} viewBox=\"0 0 487.6 487.6\" >\r\n\t\t\t\t\t\t<g>\r\n\t\t\t\t\t\t\t<g>\r\n\t\t\t\t\t\t\t\t<path d=\"M0,243.8c0,134.4,109.4,243.8,243.8,243.8s243.8-109.4,243.8-243.8S378.2,0,243.8,0C109.4,0,0,109.4,0,243.8z\r\n\t\t\t\t\t\t\t M101.9,410.8c36-24.3,66.9-39.9,76-44.4c5.5-2.7,9-8.2,9-14.4v-30.6c0-2.2-0.6-4.3-1.7-6.2c-6.2-10.5-10.5-23.1-12.7-37.4\r\n\t\t\t\t\t\t\tc-0.7-4.8-4.3-8.7-8.8-9.9c-1.2-1.5-4.6-6.7-8.9-21.8c-3.4-12-3.4-17.9-3.1-20.3c3.7,0,7.3-1.7,9.6-4.7c2.6-3.3,3.3-7.7,1.9-11.6\r\n\t\t\t\t\t\t\tc-4.8-13.6-5.4-27.5-1.7-41.7c3.2-13.6,10.5-26.4,21.8-38c6.1-6.5,13.1-12.3,20.6-17c0.1-0.1,0.3-0.2,0.4-0.3\r\n\t\t\t\t\t\t\tc6.3-4.4,12.8-7.7,19.3-9.9h0.1c5.5-1.9,11.2-2.9,17.3-3.2c16.4-1.4,31.1,1.6,44,9.3c14.2,7.8,19.9,18,19.9,18\r\n\t\t\t\t\t\t\tc2,3.8,5.8,6.3,10,6.6c0.1,0,5.5,1,10.4,7.4c5.8,7.7,14,27.7,4,76c-1.1,5.5,1.6,11,6.5,13.4c0.4,1.9,0.9,7.7-2.9,21.2\r\n\t\t\t\t\t\t\tc-3.4,12-6.2,17.7-7.9,20.3c-2.1-0.3-4.4,0-6.4,0.8c-3.8,1.6-6.6,5.1-7.3,9.1c-2,11.3-5.1,21.4-9.3,30c-0.8,1.7-1.2,3.5-1.2,5.3\r\n\t\t\t\t\t\t\tv35.4c0,6.2,3.4,11.7,9,14.4c9.2,4.5,40.1,20.2,76,44.4c-38.3,32.6-87.8,52.3-141.9,52.3C189.7,463.1,140.2,443.4,101.9,410.8z\r\n\t\t\t\t\t\t\t M243.8,24.5c120.9,0,219.3,98.4,219.3,219.3c0,57.8-22.5,110.5-59.2,149.7c-34.3-23.5-64.8-39.8-78.6-46.7v-27.4\r\n\t\t\t\t\t\t\tc3.3-7.2,6-15.2,8-23.7c9.8-3.7,16.7-15.1,23.2-38c5.9-20.9,5.4-35.6-1.6-44c7.3-40.1,4-69.7-9.9-88c-7.2-9.6-15.6-13.8-21.4-15.6\r\n\t\t\t\t\t\t\tc-4.1-5.8-12.4-15.2-26.2-22.8c-17.1-10.1-36.7-14.3-57.8-12.5c-8,0.4-15.9,1.9-23.6,4.5h-0.1c-8.6,2.9-17,7.2-25.1,12.8\r\n\t\t\t\t\t\t\tc-9.2,5.9-17.7,12.9-25,20.6c-14.4,14.7-23.8,31.3-27.9,49c-3.8,14.6-4.2,29.2-1.1,43.6c-1.3,1-2.6,2.1-3.7,3.5\r\n\t\t\t\t\t\t\tc-7.2,8.7-7.8,22.6-1.8,43.9c4,14.1,9.2,28.6,18.2,35.3c2.7,13.5,7,25.8,12.9,36.6v22.2c-13.7,6.9-44.3,23.2-78.6,46.7\r\n\t\t\t\t\t\t\tc-36.7-39.2-59.3-91.9-59.3-149.7C24.5,122.9,122.9,24.5,243.8,24.5z\"/>\r\n\t\t\t\t\t\t\t</g>\r\n\t\t\t\t\t\t</g>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t</StyledWrapperIcon>\r\n\r\n\t\t\t\t<TitleNavItem>Profile</TitleNavItem>\r\n\t\t\t</Flex>\r\n\t\t</Container>\r\n    )\r\n};\r\n\r\nexport default NavItemProfile;\r\n\r\n// Style\r\nconst StyledWrapperIcon = styled.div`\r\n\twidth: 35px;\r\n\theight: 35px;\r\n`\r\n\r\nconst TitleNavItem = styled.span`\r\n\tdisplay: block;\r\n\tmargin-left: 25px;\r\n`","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport Flex from \"../Flex\";\r\nimport Container from \"../Container\";\r\n\r\n// Type (TS)\r\ntype PropsType = { fill?: string }\r\n\r\nconst NavItemUsers: React.FC<PropsType> = (props) => {\r\n\r\n\treturn (\r\n\t\t<Container padding='20px 25px'>\r\n\t\t\t<Flex align='center'>\r\n\t\t\t\t<StyledWrapperIcon>\r\n\t\t\t\t\t<svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" fill={props.fill} x=\"0px\" y=\"0px\"\r\n\t\t\t\t\t\t viewBox=\"0 0 489.6 489.6\">\r\n\t\t\t\t\t\t<g>\r\n\t\t\t\t\t\t\t<g>\r\n\t\t\t\t\t\t\t\t<path d=\"M386.8,4.15c-34.1,0-61.8,27.7-61.8,61.8s27.7,61.8,61.8,61.8s61.8-27.7,61.8-61.8S420.9,4.15,386.8,4.15z M386.8,103.25\r\n\t\t\t\t\t\t\t\tc-20.6,0-37.3-16.7-37.3-37.3s16.7-37.3,37.3-37.3s37.3,16.7,37.3,37.3S407.4,103.25,386.8,103.25z\"/>\r\n\t\t\t\t\t\t\t\t<path d=\"M244.8,127.75c34.1,0,61.8-27.7,61.8-61.8s-27.7-61.8-61.8-61.8S183,31.85,183,65.95\r\n\t\t\t\t\t\t\t\tC183,100.05,210.7,127.75,244.8,127.75z M244.8,28.65c20.6,0,37.3,16.7,37.3,37.3s-16.7,37.3-37.3,37.3\r\n\t\t\t\t\t\t\t\tc-20.6,0-37.3-16.7-37.3-37.3C207.5,45.45,224.2,28.65,244.8,28.65z\"/>\r\n\t\t\t\t\t\t\t\t<path d=\"M428.3,140.25h-52.6c-6.8,0-12.3,5.5-12.3,12.3s5.5,12.3,12.3,12.3h52.6c20.3,0,36.8,16.5,36.8,36.8v78.3\r\n\t\t\t\t\t\t\t\tc0,15.3-9.7,29.2-24.2,34.5c-4.8,1.8-8,6.4-8,11.5v110.6c0,13.4-10.9,24.3-24.3,24.3H353c-6.8,0-12.3,5.5-12.3,12.3\r\n\t\t\t\t\t\t\t\ts5.5,12.3,12.3,12.3h55.6c26.9,0,48.8-21.9,48.8-48.8v-103c19.6-10.6,32.2-31.3,32.2-53.9v-78.3\r\n\t\t\t\t\t\t\t\tC489.6,167.65,462.1,140.25,428.3,140.25z\"/>\r\n\t\t\t\t\t\t\t\t<path d=\"M217,485.15h55.6c26.9,0,48.8-21.9,48.8-48.8v-102.7c19.6-10.6,32.2-31.3,32.2-53.9v-78.3c0-33.8-27.5-61.3-61.3-61.3\r\n\t\t\t\t\t\t\t\th-95.1c-33.8,0-61.3,27.5-61.3,61.3v78.3c0,22.6,12.6,43.3,32.2,53.9v102.7C168.2,463.25,190.1,485.15,217,485.15z M160.5,279.75\r\n\t\t\t\t\t\t\t\tv-78.3c0-20.3,16.5-36.8,36.8-36.8h95.1c20.3,0,36.8,16.5,36.8,36.8v78.3c0,15.3-9.7,29.2-24.1,34.5c-4.8,1.8-8,6.4-8,11.5v110.6\r\n\t\t\t\t\t\t\t\tc0,13.4-10.9,24.3-24.3,24.3h-55.6c-13.4,0-24.3-10.9-24.3-24.3v-110.6c0-5.1-3.2-9.7-8-11.5\r\n\t\t\t\t\t\t\t\tC170.2,308.95,160.5,295.05,160.5,279.75z\"/>\r\n\t\t\t\t\t\t\t\t<path d=\"M164.6,65.95c0-34.1-27.7-61.8-61.8-61.8S41,31.85,41,65.95s27.7,61.8,61.8,61.8C136.8,127.75,164.6,100.05,164.6,65.95z\r\n\t\t\t\t\t\t\t\t M65.5,65.95c0-20.5,16.7-37.3,37.3-37.3s37.3,16.7,37.3,37.3s-16.7,37.3-37.3,37.3C82.2,103.25,65.5,86.55,65.5,65.95z\"/>\r\n\t\t\t\t\t\t\t\t<path d=\"M81,485.15h55.6c6.8,0,12.3-5.5,12.3-12.3s-5.5-12.3-12.3-12.3H81c-13.4,0-24.3-10.9-24.3-24.3v-110.5\r\n\t\t\t\t\t\t\t\tc0-5.1-3.2-9.7-8-11.5c-14.4-5.3-24.1-19.1-24.1-34.5v-78.3c0-20.3,16.5-36.8,36.8-36.8h52.4c6.8,0,12.3-5.5,12.3-12.3\r\n\t\t\t\t\t\t\t\ts-5.5-12.3-12.3-12.3H61.3c-33.8,0-61.3,27.5-61.3,61.3v78.3c0,22.6,12.6,43.3,32.2,53.9v102.7C32.2,463.25,54.1,485.15,81,485.15\r\n\t\t\t\t\t\t\t\tz\"/>\r\n\t\t\t\t\t\t\t</g>\r\n\t\t\t\t\t\t</g>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t</StyledWrapperIcon>\r\n\r\n\t\t\t\t<TitleNavItem>Users</TitleNavItem>\r\n\t\t\t</Flex>\r\n\t\t</Container>\r\n    )\r\n};\r\n\r\nexport default NavItemUsers;\r\n\r\n// Style\r\nconst StyledWrapperIcon = styled.div`\r\n\twidth: 35px;\r\n\theight: 35px;\r\n`\r\n\r\nconst TitleNavItem = styled.span`\r\n\tdisplay: block;\r\n\tmargin-left: 25px;\r\n`","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport Flex from \"../Flex\";\r\nimport Container from \"../Container\";\r\n\r\n// Type (TS)\r\ntype PropsType = { fill?: string }\r\n\r\nconst NavItemMessages: React.FC<PropsType> = (props) => {\r\n\treturn (\r\n\t\t<Container padding='20px 25px'>\r\n\t\t\t<Flex align='center'>\r\n\t\t\t\t<StyledWrapperIcon>\r\n\t\t\t\t\t<svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" fill={props.fill}  x=\"0px\" y=\"0px\"\r\n\t\t\t\t\t\t viewBox=\"0 0 489.6 489.6\">\r\n\t\t\t\t\t\t<g>\r\n\t\t\t\t\t\t\t<g>\r\n\t\t\t\t\t\t\t\t<path d=\"M394.8,261.5V81.7c0-24.9-20.3-45.2-45.2-45.2H45.2C20.3,36.5,0,56.8,0,81.7v179.8c0,24.9,20.3,45.2,45.2,45.2h12.9v54.2\r\n\t\t\t\t\t\t\t\tc0,10,8.1,18.1,18.2,18.1l0,0c5.2,0,10.2-2.3,13.7-6.3l57.1-66.1h202.6C374.5,306.7,394.8,286.4,394.8,261.5z M141.4,282.2\r\n\t\t\t\t\t\t\t\tc-3.6,0-6.9,1.5-9.3,4.2l-49.6,57.3v-49.3c0-6.8-5.5-12.3-12.3-12.3h-25c-11.4,0-20.7-9.3-20.7-20.7V81.7\r\n\t\t\t\t\t\t\t\tc0-11.4,9.3-20.7,20.7-20.7h304.4c11.4,0,20.7,9.3,20.7,20.7v179.8c0,11.4-9.3,20.7-20.7,20.7L141.4,282.2L141.4,282.2z\"/>\r\n\t\t\t\t\t\t\t\t<path d=\"M399.7,446.8c3.5,4.1,8.5,6.3,13.6,6.3c2.1,0,4.3-0.4,6.4-1.2c7.2-2.7,11.8-9.3,11.8-17v-54.2h12.9\r\n\t\t\t\t\t\t\t\tc24.9,0,45.2-20.3,45.2-45.2V155.7c0-24.9-20.3-45.2-45.2-45.2c-6.8,0-12.3,5.5-12.3,12.2c0,6.8,5.5,12.3,12.3,12.3\r\n\t\t\t\t\t\t\t\tc11.4,0,20.7,9.3,20.7,20.7v179.8c0,11.4-9.3,20.7-20.7,20.7h-25.1c-6.8,0-12.3,5.5-12.3,12.3v49.3l-49.6-57.3\r\n\t\t\t\t\t\t\t\tc-2.3-2.7-5.7-4.2-9.3-4.2h-184c-6.8,0-12.3,5.5-12.3,12.3s5.5,12.3,12.3,12.3h178.4L399.7,446.8z\"/>\r\n\t\t\t\t\t\t\t\t<circle cx=\"197.4\" cy=\"175.9\" r=\"14.6\"/>\r\n\t\t\t\t\t\t\t\t<circle cx=\"246.3\" cy=\"175.9\" r=\"14.6\"/>\r\n\t\t\t\t\t\t\t\t<circle cx=\"148.5\" cy=\"175.9\" r=\"14.6\"/>\r\n\t\t\t\t\t\t\t</g>\r\n\t\t\t\t\t\t</g>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t</StyledWrapperIcon>\r\n\r\n\t\t\t\t<TitleNavItem>Messages</TitleNavItem>\r\n\t\t\t</Flex>\r\n\t\t</Container>\r\n    )\r\n};\r\n\r\nexport default NavItemMessages;\r\n\r\n// Style\r\nconst StyledWrapperIcon = styled.div`\r\n\twidth: 35px;\r\n\theight: 35px;\r\n`\r\n\r\nconst TitleNavItem = styled.span`\r\n\tdisplay: block;\r\n\tmargin-left: 25px;\r\n`","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport Flex from \"../Flex\";\r\nimport Container from \"../Container\";\r\n\r\n// Type (TS)\r\ntype PropsType = { fill?: string }\r\n\r\nconst NavItemNews: React.FC<PropsType> = (props) => {\r\n\r\n\treturn (\r\n\t\t<Container padding='20px 25px'>\r\n\t\t\t<Flex align='center'>\r\n\t\t\t\t\t<StyledWrapperIcon>\r\n\t\t\t\t\t\t<svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" fill={props.fill} x=\"0px\" y=\"0px\"\r\n\t\t\t\t\t\t\t viewBox=\"0 0 489.8 489.8\">\r\n\t\t\t\t\t\t\t<g>\r\n\t\t\t\t\t\t\t\t<g>\r\n\t\t\t\t\t\t\t\t\t<path d=\"M359.1,161.693v-88.3c0-4.6-2.5-8.7-6.6-10.8c-4-2.1-8.9-1.8-12.7,0.8c-87.8,60.7-138.2,68.5-172.3,68.5H70\r\n\t\t\t\t\t\t\t\t\tc-38.6,0-70,31.4-70,70v26c0,38.6,31.4,70,70,70h46.8l50.8,123.1c1.9,4.7,6.5,7.6,11.3,7.6c1.6,0,3.1-0.3,4.7-0.9\r\n\t\t\t\t\t\t\t\t\tc6.3-2.6,9.2-9.7,6.7-16l-47-113.8h24.1c118.8,0,167.4,62.9,169.6,65.8c2.4,3.2,6,5,9.8,5c1.3,0,2.6-0.2,3.8-0.6\r\n\t\t\t\t\t\t\t\t\tc5-1.7,8.4-6.3,8.4-11.6v-88.2c24.3-5.6,42.4-27.3,42.4-53.3C401.6,188.993,383.4,167.193,359.1,161.693z M24.5,227.893v-26\r\n\t\t\t\t\t\t\t\t\tc0-25.1,20.4-45.5,45.5-45.5h42.8v117H70C44.9,273.393,24.5,252.993,24.5,227.893z M334.6,326.993\r\n\t\t\t\t\t\t\t\t\tc-27.2-22.4-80.6-53.6-167.2-53.6h-30.2v-117h30.2c35,0,85.2-7.2,167.2-60V326.993z M359.1,242.493v-55.1\r\n\t\t\t\t\t\t\t\t\tc10.6,4.7,17.9,15.3,17.9,27.6C377.1,227.193,369.7,237.793,359.1,242.493z\"/>\r\n\t\t\t\t\t\t\t\t\t<path d=\"M477.5,202.693h-47.9c-6.8,0-12.3,5.5-12.3,12.3s5.5,12.3,12.3,12.3h47.9c6.8,0,12.3-5.5,12.3-12.3\r\n\t\t\t\t\t\t\t\t\tC489.8,208.093,484.3,202.693,477.5,202.693z\"/>\r\n\t\t\t\t\t\t\t\t\t<path d=\"M412.6,176.893c1.9,4.8,6.5,7.8,11.4,7.8c1.5,0,3-0.3,4.5-0.8l46.4-18.2c6.3-2.5,9.4-9.6,6.9-15.9\r\n\t\t\t\t\t\t\t\t\tc-2.5-6.3-9.6-9.4-15.9-6.9l-46.4,18.2C413.3,163.493,410.2,170.593,412.6,176.893z\"/>\r\n\t\t\t\t\t\t\t\t\t<path d=\"M474.9,264.093l-46.4-18.2c-6.3-2.5-13.4,0.6-15.9,6.9c-2.5,6.3,0.6,13.4,6.9,15.9l46.4,18.2c1.5,0.6,3,0.8,4.5,0.8\r\n\t\t\t\t\t\t\t\t\tc4.9,0,9.5-3,11.4-7.8C484.3,273.693,481.2,266.593,474.9,264.093z\"/>\r\n\t\t\t\t\t\t\t\t</g>\r\n\t\t\t\t\t\t\t</g>\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t\t</StyledWrapperIcon>\r\n\r\n\t\t\t\t\t<TitleNavItem fill={props.fill}>News</TitleNavItem>\r\n\t\t\t</Flex>\r\n\t\t</Container>\r\n\t)\r\n};\r\n\r\nexport default NavItemNews;\r\n\r\n// Style\r\nconst StyledWrapperIcon = styled.div`\r\n\twidth: 35px;\r\n\theight: 35px;\r\n`\r\n\r\nconst TitleNavItem = styled.span<PropsType>`\r\n\tdisplay: block;\r\n\tmargin-left: 25px;\r\n\tcolor: ${props => props.fill}\r\n`","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport Flex from \"../Flex\";\r\nimport Container from \"../Container\";\r\n\r\n// Type (TS)\r\ntype PropsType = { fill?: string }\r\n\r\nconst NavItemMusic: React.FC<PropsType> = (props) => {\r\n\r\n\treturn (\r\n\t\t<Container padding='20px 25px'>\r\n\t\t\t<Flex align='center'>\r\n\t\t\t\t<StyledWrapperIcon>\r\n\t\t\t\t\t<svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" fill={props.fill} x=\"0px\" y=\"0px\"\r\n\t\t\t\t\t\t viewBox=\"0 0 467.2 467.2\">\r\n\t\t\t\t\t\t<g>\r\n\t\t\t\t\t\t\t<path d=\"M467.2,235.7c0-62.4-24.3-121.1-68.4-165.2S296,2.1,233.6,2.1S112.5,26.4,68.4,70.5S0,173.3,0,235.7v110.6\r\n\t\t\t\t\t\t\t\tc0,62.5,50.9,113.4,113.4,113.4c7.5,0,13.5-6,13.5-13.5V246.5c0-7.5-6-13.5-13.5-13.5c-34.6,0-65.6,15.5-86.4,40v-37.3\r\n\t\t\t\t\t\t\t\tc0-113.9,92.7-206.6,206.6-206.6s206.6,92.7,206.6,206.6c0,0.9,0.1,1.8,0.3,2.7c-0.2,0.9-0.3,1.8-0.3,2.7v37.3\r\n\t\t\t\t\t\t\t\tc-20.8-24.5-51.8-40-86.4-40c-7.5,0-13.5,6-13.5,13.5v199.7c0,7.5,6,13.5,13.5,13.5c62.5,0,113.4-50.9,113.4-113.4V241.1\r\n\t\t\t\t\t\t\t\tc0-0.9-0.1-1.8-0.3-2.7C467.1,237.5,467.2,236.6,467.2,235.7z M99.8,261v170.6c-41.2-6.5-72.9-42.3-72.9-85.3\r\n\t\t\t\t\t\t\t\tC27,303.3,58.6,267.5,99.8,261z M367.4,437V266.4c41.2,6.5,72.9,42.3,72.9,85.3C440.2,394.8,408.6,430.5,367.4,437z\"/>\r\n\t\t\t\t\t\t</g>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t</StyledWrapperIcon>\r\n\r\n\t\t\t\t<TitleNavItem fill={props.fill}>Music</TitleNavItem>\r\n\t\t\t</Flex>\r\n\t\t</Container>\r\n    )\r\n};\r\n\r\nexport default NavItemMusic;\r\n\r\n// Style\r\nconst StyledWrapperIcon = styled.div`\r\n\twidth: 35px;\r\n\theight: 35px;\r\n`\r\n\r\nconst TitleNavItem = styled.span<PropsType>`\r\n\tdisplay: block;\r\n\tmargin-left: 25px;\r\n\tcolor: ${props => props.fill};\r\n`","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport Flex from \"../Flex\";\r\nimport Container from \"../Container\";\r\n\r\n// Type (TS)\r\ntype PropsType = { fill?: string }\r\n\r\nconst NavItemSettings: React.FC<PropsType> = (props) => {\r\n\r\n\treturn (\r\n\t\t<Container padding='20px 25px'>\r\n\t\t\t<Flex align='center'>\r\n\t\t\t\t<StyledWrapperIcon>\r\n\t\t\t\t\t<svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" fill={props.fill} x=\"0px\" y=\"0px\"\r\n\t\t\t\t\t\t viewBox=\"0 0 478.703 478.703\">\r\n\t\t\t\t\t\t\t<g>\r\n\t\t\t\t\t\t\t\t<g>\r\n\t\t\t\t\t\t\t\t\t<path d=\"M454.2,189.101l-33.6-5.7c-3.5-11.3-8-22.2-13.5-32.6l19.8-27.7c8.4-11.8,7.1-27.9-3.2-38.1l-29.8-29.8\r\n\t\t\t\t\t\t\t\t\t\tc-5.6-5.6-13-8.7-20.9-8.7c-6.2,0-12.1,1.9-17.1,5.5l-27.8,19.8c-10.8-5.7-22.1-10.4-33.8-13.9l-5.6-33.2\r\n\t\t\t\t\t\t\t\t\t\tc-2.4-14.3-14.7-24.7-29.2-24.7h-42.1c-14.5,0-26.8,10.4-29.2,24.7l-5.8,34c-11.2,3.5-22.1,8.1-32.5,13.7l-27.5-19.8\r\n\t\t\t\t\t\t\t\t\t\tc-5-3.6-11-5.5-17.2-5.5c-7.9,0-15.4,3.1-20.9,8.7l-29.9,29.8c-10.2,10.2-11.6,26.3-3.2,38.1l20,28.1\r\n\t\t\t\t\t\t\t\t\t\tc-5.5,10.5-9.9,21.4-13.3,32.7l-33.2,5.6c-14.3,2.4-24.7,14.7-24.7,29.2v42.1c0,14.5,10.4,26.8,24.7,29.2l34,5.8\r\n\t\t\t\t\t\t\t\t\t\tc3.5,11.2,8.1,22.1,13.7,32.5l-19.7,27.4c-8.4,11.8-7.1,27.9,3.2,38.1l29.8,29.8c5.6,5.6,13,8.7,20.9,8.7c6.2,0,12.1-1.9,17.1-5.5\r\n\t\t\t\t\t\t\t\t\t\tl28.1-20c10.1,5.3,20.7,9.6,31.6,13l5.6,33.6c2.4,14.3,14.7,24.7,29.2,24.7h42.2c14.5,0,26.8-10.4,29.2-24.7l5.7-33.6\r\n\t\t\t\t\t\t\t\t\t\tc11.3-3.5,22.2-8,32.6-13.5l27.7,19.8c5,3.6,11,5.5,17.2,5.5l0,0c7.9,0,15.3-3.1,20.9-8.7l29.8-29.8c10.2-10.2,11.6-26.3,3.2-38.1\r\n\t\t\t\t\t\t\t\t\t\tl-19.8-27.8c5.5-10.5,10.1-21.4,13.5-32.6l33.6-5.6c14.3-2.4,24.7-14.7,24.7-29.2v-42.1\r\n\t\t\t\t\t\t\t\t\t\tC478.9,203.801,468.5,191.501,454.2,189.101z M451.9,260.401c0,1.3-0.9,2.4-2.2,2.6l-42,7c-5.3,0.9-9.5,4.8-10.8,9.9\r\n\t\t\t\t\t\t\t\t\t\tc-3.8,14.7-9.6,28.8-17.4,41.9c-2.7,4.6-2.5,10.3,0.6,14.7l24.7,34.8c0.7,1,0.6,2.5-0.3,3.4l-29.8,29.8c-0.7,0.7-1.4,0.8-1.9,0.8\r\n\t\t\t\t\t\t\t\t\t\tc-0.6,0-1.1-0.2-1.5-0.5l-34.7-24.7c-4.3-3.1-10.1-3.3-14.7-0.6c-13.1,7.8-27.2,13.6-41.9,17.4c-5.2,1.3-9.1,5.6-9.9,10.8l-7.1,42\r\n\t\t\t\t\t\t\t\t\t\tc-0.2,1.3-1.3,2.2-2.6,2.2h-42.1c-1.3,0-2.4-0.9-2.6-2.2l-7-42c-0.9-5.3-4.8-9.5-9.9-10.8c-14.3-3.7-28.1-9.4-41-16.8\r\n\t\t\t\t\t\t\t\t\t\tc-2.1-1.2-4.5-1.8-6.8-1.8c-2.7,0-5.5,0.8-7.8,2.5l-35,24.9c-0.5,0.3-1,0.5-1.5,0.5c-0.4,0-1.2-0.1-1.9-0.8l-29.8-29.8\r\n\t\t\t\t\t\t\t\t\t\tc-0.9-0.9-1-2.3-0.3-3.4l24.6-34.5c3.1-4.4,3.3-10.2,0.6-14.8c-7.8-13-13.8-27.1-17.6-41.8c-1.4-5.1-5.6-9-10.8-9.9l-42.3-7.2\r\n\t\t\t\t\t\t\t\t\t\tc-1.3-0.2-2.2-1.3-2.2-2.6v-42.1c0-1.3,0.9-2.4,2.2-2.6l41.7-7c5.3-0.9,9.6-4.8,10.9-10c3.7-14.7,9.4-28.9,17.1-42\r\n\t\t\t\t\t\t\t\t\t\tc2.7-4.6,2.4-10.3-0.7-14.6l-24.9-35c-0.7-1-0.6-2.5,0.3-3.4l29.8-29.8c0.7-0.7,1.4-0.8,1.9-0.8c0.6,0,1.1,0.2,1.5,0.5l34.5,24.6\r\n\t\t\t\t\t\t\t\t\t\tc4.4,3.1,10.2,3.3,14.8,0.6c13-7.8,27.1-13.8,41.8-17.6c5.1-1.4,9-5.6,9.9-10.8l7.2-42.3c0.2-1.3,1.3-2.2,2.6-2.2h42.1\r\n\t\t\t\t\t\t\t\t\t\tc1.3,0,2.4,0.9,2.6,2.2l7,41.7c0.9,5.3,4.8,9.6,10,10.9c15.1,3.8,29.5,9.7,42.9,17.6c4.6,2.7,10.3,2.5,14.7-0.6l34.5-24.8\r\n\t\t\t\t\t\t\t\t\t\tc0.5-0.3,1-0.5,1.5-0.5c0.4,0,1.2,0.1,1.9,0.8l29.8,29.8c0.9,0.9,1,2.3,0.3,3.4l-24.7,34.7c-3.1,4.3-3.3,10.1-0.6,14.7\r\n\t\t\t\t\t\t\t\t\t\tc7.8,13.1,13.6,27.2,17.4,41.9c1.3,5.2,5.6,9.1,10.8,9.9l42,7.1c1.3,0.2,2.2,1.3,2.2,2.6v42.1H451.9z\"/>\r\n\t\t\t\t\t\t\t\t\t<path d=\"M239.4,136.001c-57,0-103.3,46.3-103.3,103.3s46.3,103.3,103.3,103.3s103.3-46.3,103.3-103.3S296.4,136.001,239.4,136.001\r\n\t\t\t\t\t\t\t\t\t\tz M239.4,315.601c-42.1,0-76.3-34.2-76.3-76.3s34.2-76.3,76.3-76.3s76.3,34.2,76.3,76.3S281.5,315.601,239.4,315.601z\"/>\r\n\t\t\t\t\t\t\t\t</g>\r\n\t\t\t\t\t\t\t</g>\r\n\r\n\t\t\t\t\t\t</svg>\r\n\t\t\t\t</StyledWrapperIcon>\r\n\r\n\t\t\t\t<TitleNavItem fill={props.fill}>Settings</TitleNavItem>\r\n\t\t\t</Flex>\r\n\t\t</Container>\r\n    )\r\n};\r\n\r\nexport default NavItemSettings;\r\n\r\n// Style\r\nconst StyledWrapperIcon = styled.div`\r\n\twidth: 35px;\r\n\theight: 35px;\r\n`\r\n\r\nconst TitleNavItem = styled.span<PropsType>`\r\n\tdisplay: block;\r\n\tmargin-left: 25px;\r\n\tcolor: ${props => props.fill};\r\n`","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport Flex from \"./Flex\";\r\nimport Container from \"./Container\";\r\n\r\n// Type (TS)\r\ntype PropsType = { fill?: string }\r\n\r\nconst Exit: React.FC<PropsType> = (props) => {\r\n\r\n    return (\r\n        <Container>\r\n                <StyledWrapperIcon>\r\n                    <svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" fill={props.fill} x=\"0px\" y=\"0px\"\r\n                         viewBox=\"0 0 512 512\">\r\n                        <g>\r\n                            <g>\r\n                                <path d=\"M255.15,468.625H63.787c-11.737,0-21.262-9.526-21.262-21.262V64.638c0-11.737,9.526-21.262,21.262-21.262H255.15\r\n                                    c11.758,0,21.262-9.504,21.262-21.262S266.908,0.85,255.15,0.85H63.787C28.619,0.85,0,29.47,0,64.638v382.724\r\n                                    c0,35.168,28.619,63.787,63.787,63.787H255.15c11.758,0,21.262-9.504,21.262-21.262\r\n                                    C276.412,478.129,266.908,468.625,255.15,468.625z\"/>\r\n                            </g>\r\n                        </g>\r\n                                                <g>\r\n                            <g>\r\n                                <path d=\"M505.664,240.861L376.388,113.286c-8.335-8.25-21.815-8.143-30.065,0.213s-8.165,21.815,0.213,30.065l92.385,91.173\r\n                                    H191.362c-11.758,0-21.262,9.504-21.262,21.262c0,11.758,9.504,21.263,21.262,21.263h247.559l-92.385,91.173\r\n                                    c-8.377,8.25-8.441,21.709-0.213,30.065c4.167,4.21,9.653,6.336,15.139,6.336c5.401,0,10.801-2.041,14.926-6.124l129.276-127.575\r\n                                    c4.04-3.997,6.336-9.441,6.336-15.139C512,250.302,509.725,244.88,505.664,240.861z\"/>\r\n                            </g>\r\n                        </g>\r\n                    </svg>\r\n                </StyledWrapperIcon>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default Exit;\r\n\r\n// Style\r\nconst StyledWrapperIcon = styled.div`\r\n\twidth: 20px;\r\n\theight: 20px;\r\n`","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport Flex from \"./Flex\";\r\nimport Container from \"./Container\";\r\n\r\n// Type (TS)\r\ntype PropsType = { fill?: string }\r\n\r\nconst Entrance: React.FC<PropsType> = (props) => {\r\n\r\n    return (\r\n        <Container>\r\n            <Flex align='center' justify='center'>\r\n                <div>Login</div>\r\n\r\n                <StyledWrapperIcon>\r\n                    <svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" fill={props.fill} x=\"0px\" y=\"0px\"\r\n                         viewBox=\"0 0 512 512\">\r\n                        <g>\r\n                            <g>\r\n                                <path d=\"M255.15,468.625H63.787c-11.737,0-21.262-9.526-21.262-21.262V64.638c0-11.737,9.526-21.262,21.262-21.262H255.15\r\n                                    c11.758,0,21.262-9.504,21.262-21.262S266.908,0.85,255.15,0.85H63.787C28.619,0.85,0,29.47,0,64.638v382.724\r\n                                    c0,35.168,28.619,63.787,63.787,63.787H255.15c11.758,0,21.262-9.504,21.262-21.262\r\n                                    C276.412,478.129,266.908,468.625,255.15,468.625z\"/>\r\n                            </g>\r\n                        </g>\r\n                        <g>\r\n                            <g>\r\n                                <path d=\"M505.664,240.861L376.388,113.286c-8.335-8.25-21.815-8.143-30.065,0.213s-8.165,21.815,0.213,30.065l92.385,91.173\r\n                                    H191.362c-11.758,0-21.262,9.504-21.262,21.262c0,11.758,9.504,21.263,21.262,21.263h247.559l-92.385,91.173\r\n                                    c-8.377,8.25-8.441,21.709-0.213,30.065c4.167,4.21,9.653,6.336,15.139,6.336c5.401,0,10.801-2.041,14.926-6.124l129.276-127.575\r\n                                    c4.04-3.997,6.336-9.441,6.336-15.139C512,250.302,509.725,244.88,505.664,240.861z\"/>\r\n                            </g>\r\n                        </g>\r\n                    </svg>\r\n                </StyledWrapperIcon>\r\n            </Flex>\r\n\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default Entrance;\r\n\r\n// Style\r\nconst StyledWrapperIcon = styled.div`\r\n    margin-left: 15px;\r\n    width: 20px;\r\n\theight: 20px;\r\n  \r\n  transform: rotateZ(180deg);\r\n`","import React, {useEffect, useState} from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport {logout} from \"../../redux/authReducer\";\r\nimport styled from \"styled-components\";\r\nimport logo from \"../../assets/images/logo.png\";\r\nimport Flex from \"../StyledComponents/Flex\";\r\nimport NavItemProfile from \"../StyledComponents/StyledINavItem/NavItemProfile\";\r\nimport NavItemUsers from \"../StyledComponents/StyledINavItem/NavItemUsers\";\r\nimport NavItemMessages from \"../StyledComponents/StyledINavItem/NavItemMessages\";\r\nimport NavItemNews from \"../StyledComponents/StyledINavItem/NavItemNews\";\r\nimport NavItemMusic from \"../StyledComponents/StyledINavItem/NavItemMusic\";\r\nimport NavItemSettings from \"../StyledComponents/StyledINavItem/NavItemSettings\";\r\nimport Container from \"../StyledComponents/Container\";\r\nimport Li from \"../StyledComponents/Li\";\r\nimport Exit from \"../StyledComponents/Exit\";\r\nimport Entrance from \"../StyledComponents/Entrance\";\r\n\r\nconst Navbar: React.FC<MapPropsType & DispatchPropsType> = (props) => {\r\n    // Hook\r\n    // Type (TS)\r\n    type InitialStateType = { [key: string]: boolean }\r\n\r\n    let profileActive = false;\r\n\r\n    if (props.isAuth) {\r\n        profileActive = true\r\n    }\r\n\r\n    let [isActiveSectionsObj, setSectionToggle] = useState<InitialStateType>({'profile': profileActive, 'messages': false, 'users': false, 'login': false});\r\n\r\n\r\n    function onToggleSection(initialState: InitialStateType, sectionName: string): void {\r\n         if (!initialState[sectionName]) {\r\n             const arrayNames = Object.keys(initialState);\r\n\r\n             let newState: InitialStateType = {};\r\n\r\n             arrayNames.forEach((el) => {newState[el] = false});\r\n\r\n             newState[sectionName] = true;\r\n\r\n             setSectionToggle(newState);\r\n         };\r\n    };\r\n\r\n    return (\r\n        <StyledNav background={props.background}>\r\n            <Flex direction='column'>\r\n                <Container padding='20px'>\r\n                    <Flex>\r\n                        <StyledLogoLink href='#/profile' color={props.color} onClick={() => onToggleSection(isActiveSectionsObj, 'profile')}>Samurai</StyledLogoLink>\r\n\r\n                        {/*<div>Burger</div>*/}\r\n                    </Flex>\r\n\r\n                    <ul>\r\n                        <Li margin='10px 0' borderRadius='15px' backgroundActive={props.backgroundActive}\r\n                            active={isActiveSectionsObj.profile}>\r\n                            <NavLink to=\"/profile\" onClick={() => onToggleSection(isActiveSectionsObj, 'profile')}>\r\n                                <NavItemProfile fill={props.color}/>\r\n                            </NavLink>\r\n                        </Li>\r\n\r\n                        <Li margin='10px 0' borderRadius='15px' backgroundActive={props.backgroundActive}\r\n                            active={isActiveSectionsObj.messages}>\r\n                            <NavLink to=\"/dialogs\" onClick={() => onToggleSection(isActiveSectionsObj, 'messages')}>\r\n                                <NavItemMessages fill={props.color}/>\r\n                            </NavLink>\r\n                        </Li>\r\n\r\n                        <Li margin='10px 0' borderRadius='15px' backgroundActive={props.backgroundActive}\r\n                            active={isActiveSectionsObj.users}>\r\n                            <NavLink to=\"/users\" onClick={() => onToggleSection(isActiveSectionsObj, 'users')}>\r\n                                <NavItemUsers fill={props.color}/>\r\n                            </NavLink>\r\n                        </Li>\r\n\r\n                        <Li margin='10px 0' borderRadius='15px' disabled>\r\n                            <a>\r\n                                <NavItemNews fill={props.colorDisabled} />\r\n                            </a>\r\n                        </Li>\r\n\r\n                        <Li margin='10px 0' borderRadius='15px' disabled>\r\n                            <a>\r\n                                <NavItemMusic fill={props.colorDisabled} />\r\n                            </a>\r\n                        </Li>\r\n\r\n                        <Li margin='10px 0' borderRadius='15px' disabled>\r\n                            <a>\r\n                                <NavItemSettings fill={props.colorDisabled} />\r\n                            </a>\r\n                        </Li>\r\n                    </ul>\r\n                </Container>\r\n\r\n\r\n\r\n                <StyledLogProf backgroundSecondary={props.backgroundSecondary}>\r\n                    <Container padding='0 20px' height='100%'>\r\n                        <Flex align='center' justify='center' height='100%'>\r\n                            {props.isAuth\r\n                                ? <Flex justify='center' align='center' width='100%'><div>{props.login}</div> <StyledLogoutButton background={props.background} onClick={props.logout}><Exit fill={props.color}/></StyledLogoutButton></Flex>\r\n                                : <NavLink to={'/login'}><StyledLoginButton background={props.background}> <Entrance fill={props.color}/> </StyledLoginButton></NavLink>}\r\n                        </Flex>\r\n                    </Container>\r\n                </StyledLogProf>\r\n            </Flex>\r\n        </StyledNav>\r\n    );\r\n};\r\n\r\n\r\n// Type (TS)\r\n// Общий тип\r\nexport type MapPropsType = {\r\n    isAuth: boolean\r\n    login: string | null\r\n\r\n    // Style\r\n    backgroundActive?: string,\r\n    backgroundDisabled?: string,\r\n    colorDisabled?: string\r\n} & StyledLogoType & StyledNavType & StyledLogProfType\r\n\r\nexport type DispatchPropsType = {\r\n    logout: () => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n\r\n    // Styled\r\n    color: state.app.theme.global.color,\r\n    background: state.app.theme.sidebar.background,\r\n    backgroundSecondary: state.app.theme.sidebar.backgroundSecondary,\r\n    backgroundActive: state.app.theme.button.backgroundActive,\r\n    backgroundDisabled: state.app.theme.button.backgroundDisabled,\r\n    colorDisabled: state.app.theme.button.colorDisabled\r\n});\r\n\r\nexport default connect<MapPropsType, DispatchPropsType, {}, AppStateType>(mapStateToProps, {logout})(Navbar)\r\n\r\n\r\n// Style\r\n// Nav\r\ntype StyledNavType = {\r\n    background?: string\r\n}\r\n\r\nconst StyledNav = styled.nav<StyledNavType>`\r\n  min-height: 100vh;\r\n  width: 340px;\r\n\r\n  background-color: ${props => props.background};\r\n`\r\n\r\n// LogoLink\r\ntype StyledLogoType = {\r\n    color?: string\r\n}\r\n\r\nconst StyledLogoLink = styled.a<StyledLogoType>`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n  padding-left: 65px;\r\n  \r\n  min-width: 40px;\r\n  min-height: 40px;\r\n\r\n  color: ${props => props.color};\r\n  font-family: \"Comic Sans MS\", cursive, sans-serif;\r\n  font-size: 30px;\r\n  font-weight: 500;\r\n  letter-spacing: 13px;\r\n  text-decoration: none;\r\n\r\n  background: url(${logo}) left center no-repeat;\r\n  background-size: contain;\r\n\r\n  cursor: pointer;\r\n`\r\n\r\n// LogProf\r\ntype StyledLogProfType = {\r\n    backgroundSecondary?: string\r\n}\r\n\r\nconst StyledLogProf = styled.div<StyledLogProfType>`\r\n  position: fixed;\r\n  bottom: 0;\r\n  \r\n  height: 70px;\r\n  width: 340px;\r\n  \r\n  background-color: ${props => props.backgroundSecondary};\r\n`\r\n\r\n// Login (Button)\r\ntype StyledLoginButtonType = {\r\n    background?: string\r\n}\r\nconst StyledLoginButton = styled.button<StyledLoginButtonType>`\r\n    display: block;\r\n    padding: 10px 50px;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: 15px;\r\n    box-shadow: 0 0 0 2px ${props => props.background};\r\n  \r\n    background-color: transparent;\r\n    cursor: pointer;\r\n  \r\n    &:hover {\r\n      background-color: ${props => props.background};\r\n    }\r\n`\r\n\r\n// Logout (Button)\r\ntype StyledLogoutButtonType = {\r\n    background?: string\r\n}\r\nconst StyledLogoutButton = styled.button<StyledLogoutButtonType>`\r\n    display: block;\r\n    margin-left: 15px;\r\n    padding: 10px;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: 15px;\r\n  \r\n    background-color: transparent;\r\n    cursor: pointer;\r\n  \r\n    &:hover {\r\n      background-color: ${props => props.background};\r\n    }\r\n`\r\n","export const updateObjectInArray = (items: any, itemId: any, objPropName: any, newObjProps: any) => {\r\n    return items.map((i: any) => {\r\n        if (i[objPropName] === itemId) {\r\n            return {...i, ...newObjProps};\r\n        }\r\n\r\n        return i;\r\n    });\r\n};","import {instance, GetItemsType, APIResponseType} from \"./api\";\r\n\r\nexport const usersAPI = {\r\n    // Users\r\n    getUsers(currentPage = 1, pageSize: number) {\r\n        return instance.get<GetItemsType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(res => {\r\n                return res.data\r\n            });\r\n    },\r\n\r\n    follow(userId: number) {\r\n        return instance.post<APIResponseType>(`follow/${userId}`).then(res => res.data)\r\n    },\r\n\r\n    unfollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`).then(res => res.data) as Promise<APIResponseType>\r\n    }\r\n\r\n    // // Profile (переделегирование) (backward responsibility)\r\n    // getProfile(userId: number) {\r\n    //     console.warn('Obsolete method. Please use profileAPI object')\r\n    //     return profileAPI.getProfile(userId);\r\n    // }\r\n};","import {updateObjectInArray} from \"../utils/helpers/objectHelpers\";\r\n\r\nimport {UserType} from \"../types/types\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType, BaseThunkType, InferActionsTypes} from \"./reduxStore\";\r\nimport {Action, Dispatch} from \"redux\";\r\nimport {usersAPI} from \"../api/usersAPI\";\r\nimport {APIResponseType} from \"../api/api\";\r\n\r\n// Не нужно т.к. TS в reducer подсказывает тип на основе AС\r\n// const FOLLOW = 'SN/USERS/FOLLOW';\r\n// const UNFOLLOW = 'SN/USERS/UNFOLLOW';\r\n// const SET_USERS = 'SN/USERS/SET-USERS';\r\n// const SET_CURRENT_PAGE = 'SN/USERS/SET-CURRENT-PAGE';\r\n// const SET_TOTAL_USERS_COUNT = 'SN/USERS/SET-TOTAL-USERS-COUNT';\r\n// const TOGGLE_IS_FETCHING = 'SN/USERS/TOGGLE-IS-FETCHING';\r\n// const TOGGLE_IS_FOLLOWING_PROGRESS = 'SN/USERS/TOGGLE-IS-FOLLOWING-PROGRESS';\r\n\r\n\r\n// Type (TS)\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<number> // array of users id's\r\n};\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\n// Reducer\r\nconst usersReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/USERS/FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            };\r\n\r\n        case 'SN/USERS/UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            };\r\n\r\n        case 'SN/USERS/SET_USERS':\r\n            return {...state, users: action.users};\r\n\r\n        case 'SN/USERS/SET_CURRENT_PAGE':\r\n            return {...state, currentPage: action.currentPage};\r\n\r\n        case 'SN/USERS/SET_TOTAL_USERS_COUNT':\r\n            return {...state, totalUsersCount: action.count};\r\n\r\n        case 'SN/USERS/TOGGLE_IS_FETCHING':\r\n            return {...state, isFetching: action.isFetching};\r\n\r\n        case 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS':\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n\r\n        default :\r\n            return state;\r\n    }\r\n};\r\n\r\n// Type (TS) (ActionsTypes)\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\n\r\n\r\n// Action creators\r\n// Type (TS)\r\n// AC\r\n// Общий AC\r\nexport const actions = {\r\n    followSuccess: (userId: number) => ({type: 'SN/USERS/FOLLOW', userId} as const),\r\n\r\n    unfollowSuccess: (userId: number) => ({type: 'SN/USERS/UNFOLLOW', userId} as const),\r\n\r\n    setUsers: (users: Array<UserType>) => ({type: 'SN/USERS/SET_USERS', users} as const),\r\n\r\n    setCurrentPage: (currentPage: number) => ({\r\n        type: 'SN/USERS/SET_CURRENT_PAGE',\r\n        currentPage\r\n    } as const),\r\n\r\n    setTotalUsersCount: (totalUsersCount: number) => ({\r\n        type: 'SN/USERS/SET_TOTAL_USERS_COUNT',\r\n        count: totalUsersCount\r\n    } as const),\r\n\r\n    toggleIsFetching: (isFetching: boolean) => ({\r\n        type: 'SN/USERS/TOGGLE_IS_FETCHING',\r\n        isFetching\r\n    } as const),\r\n\r\n    toggleFollowingProgress: (isFetching: boolean, userId: number) => ({\r\n        type: 'SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS',\r\n        isFetching,\r\n        userId\r\n    } as const)\r\n}\r\n\r\n\r\n// export const followSuccess = (userId: number) => ({type: FOLLOW, userId});\r\n//\r\n// export const unfollowSuccess = (userId: number) => ({type: UNFOLLOW, userId});\r\n//\r\n// export const setUsers = (users: Array<UserType>) => ({type: SET_USERS, users});\r\n//\r\n// export const setCurrentPage = (currentPage: number) => ({\r\n//     type: SET_CURRENT_PAGE,\r\n//     currentPage\r\n// });\r\n//\r\n// export const setTotalUsersCount = (totalUsersCount: number) => ({\r\n//     type: SET_TOTAL_USERS_COUNT,\r\n//     count: totalUsersCount\r\n// });\r\n//\r\n// export const toggleIsFetching = (isFetching: boolean) => ({\r\n//     type: TOGGLE_IS_FETCHING,\r\n//     isFetching\r\n// });\r\n//\r\n// export const toggleFollowingProgress = (isFetching: boolean, userId: number) => ({\r\n//     type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n//     isFetching,\r\n//     userId\r\n// });\r\n\r\n\r\n// Thunk Creators\r\n// Type (TS)\r\n// Первый вариант типизации\r\n// type GetStateType = () => AppStateType\r\n// type DispatchType = Dispatch<ActionsTypes>\r\n\r\ntype ThunkType = BaseThunkType<ActionsTypes> // Второй вариант (рекомендасьон от Redux)\r\n\r\nexport const requestUsers = (page: number, pageSize: number): ThunkType => {\r\n    // Thunk\r\n    return async (dispatch, getState) => {\r\n        // getState - для примера (второй параметр thunk)\r\n        // const a = getState().bla.bla; (ошибка, такого нет)\r\n\r\n        dispatch(actions.toggleIsFetching(true));\r\n        dispatch(actions.setCurrentPage(page))\r\n\r\n        const data = await usersAPI.getUsers(page, pageSize);\r\n\r\n        dispatch(actions.toggleIsFetching(false));\r\n        dispatch(actions.setUsers(data.items));\r\n        dispatch(actions.setTotalUsersCount(data.totalCount));\r\n    };\r\n};\r\n\r\n\r\n// (Функция для предотвращения дублирования (follow, unfollow))\r\nconst _followUnfollowFlow = async (dispatch: Dispatch<ActionsTypes>,\r\n                                   userId: number,\r\n                                   apiMethod: (userId: number) => Promise<APIResponseType>,\r\n                                   actionCreator: (userId: number) => ActionsTypes) => {\r\n    dispatch(actions.toggleFollowingProgress(true, userId));\r\n\r\n    const response = await apiMethod(userId);\r\n\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n\r\n    dispatch(actions.toggleFollowingProgress(false, userId));\r\n};\r\n\r\n\r\nexport const follow = (userId: number): ThunkType => {\r\n    // Thunk\r\n    return async (dispatch) => {\r\n        await _followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), actions.followSuccess);\r\n    }\r\n};\r\n\r\nexport const unfollow = (userId: number): ThunkType => {\r\n    // Thunk\r\n    return async (dispatch) => {\r\n        await _followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), actions.unfollowSuccess);\r\n    };\r\n};\r\n\r\n\r\nexport default usersReducer;","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport Button from \"../../StyledComponents/Button\";\r\nimport Flex from \"../../StyledComponents/Flex\";\r\nimport styled, {css} from \"styled-components\";\r\n\r\n// Type (TS)\r\ntype PropsType = {\r\n    totalItemsCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber :number) => void\r\n    portionSize?: number\r\n}\r\n\r\n// FC\r\nconst Paginator: React.FC<PropsType> = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    // Кол-во страниц\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages: Array<number> = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    // Кол-во порций\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n\r\n    // Local state\r\n    let [portionNumber, setPortionNumber] = useState<number>(1);\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <Flex width='68px' direction='column' align='center' margin='0 0 0 20px'>\r\n\r\n            <Button margin='0 0 5px 0' disabled={portionNumber > 1 ? false : true} padding='5px 15px' onClick={() => {\r\n                setPortionNumber(portionNumber - 1)\r\n            }}>PREV</Button>\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <div key={p} className={currentPage === p ? styles.selectedPage : \"\" + styles.pageNumber}\r\n                                 onClick={(e) => {\r\n                                     onPageChanged(p)\r\n                                 }}>{p}</div>\r\n                })}\r\n\r\n            <Button margin='5px 0 0 0' disabled={portionNumber < portionCount ? false : true } padding='5px 15px' onClick={() => {\r\n                setPortionNumber(portionNumber + 1)\r\n            }}>NEXT</Button>\r\n        </Flex>\r\n    )\r\n};\r\n\r\nexport default Paginator;\r\n\r\n// Style\r\nconst StyledButton = styled.button`\r\n\r\n  border-radius: 30px;\r\n  border-width: 0;\r\n\r\n  background-color: rgba(54, 114, 244, 0.6);\r\n  outline: none;\r\n  \r\n  &:hover {\r\n    box-shadow: 0 0 10px 1px #3672f4;\r\n    background-color: rgba(54, 114, 244, 1);\r\n  }\r\n  \r\n  ${props => props.disabled && css`\r\n    &:hover {\r\n      background-color: rgba(54, 114, 244, 0.3);\r\n      box-shadow: none;\r\n    }\r\n\r\n    background-color: rgba(54, 114, 244, 0.3);\r\n  `}\r\n`","import React from \"react\";\r\nimport styles from \"./user.module.css\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {UserType} from \"../../../types/types\";\r\nimport Button from \"../../StyledComponents/Button\";\r\nimport Flex from \"../../StyledComponents/Flex\";\r\nimport Container from \"../../StyledComponents/Container\";\r\nimport styled from \"styled-components\";\r\nimport like from \"../../../assets/images/like.png\";\r\n\r\n\r\n// Type (TS)\r\ntype PropsType = {\r\n    user: UserType\r\n    followingInProgress: Array<number>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n\r\n    // Style\r\n    backgroundUser?: string\r\n}\r\n\r\n\r\n// FC\r\nconst User: React.FC<PropsType> = ({user, followingInProgress, follow, unfollow, backgroundUser}) => {\r\n    return (\r\n            <Flex align='center' margin='20px 0 40px 0' background={backgroundUser} borderRadius='20px' boxShadow='0 0 10px 1px rgba(54,114,244,0.6)' padding='20px 40px' maxWidth='450px'>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto} alt=\"userPhoto\"/>\r\n                    </NavLink>\r\n                </div>\r\n\r\n\r\n\r\n                <Container margin='0 0 0 30px'>\r\n                    <Container margin='0 0 10px 0'>\r\n                        <StyledName>{user.name}</StyledName>\r\n\r\n                        <StyledStatus>{user.status}</StyledStatus>\r\n                    </Container>\r\n\r\n                    {user.followed\r\n                        ? <Button disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      unfollow(user.id);\r\n                                  }}>Unfollow</Button>\r\n\r\n                        : <Button disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      follow(user.id);\r\n                                  }}>Follow</Button>}\r\n                </Container>\r\n            </Flex>\r\n    )\r\n};\r\n\r\nexport default User;\r\n\r\n// Style\r\nconst StyledName = styled.div`\r\n  font-size: 18px;\r\n`\r\n\r\nconst StyledStatus = styled.div`\r\n  font-weight: 300;\r\n`","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User/User\";\r\nimport {UserType} from \"../../types/types\";\r\nimport Flex from \"../StyledComponents/Flex\";\r\n\r\n// Type (TS)\r\ntype PropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber :number) => void\r\n    users: Array<UserType>\r\n    followingInProgress: Array<number>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n\r\n    // Style\r\n    backgroundUser?: string\r\n}\r\n\r\n// FC\r\nconst Users: React.FC<PropsType> = ({currentPage, totalUsersCount, pageSize, onPageChanged, users,\r\n                                        ...props}) => {\r\n    return (\r\n        <Flex>\r\n            <div>\r\n                {\r\n                    users.map(u => <User key={u.id} user={u}\r\n                                         followingInProgress={props.followingInProgress}\r\n                                         follow={props.follow}\r\n                                         unfollow={props.unfollow}\r\n                                         backgroundUser={props.backgroundUser}\r\n                                    />)\r\n                }\r\n            </div>\r\n\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                       totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        </Flex>\r\n    )\r\n};\r\n\r\nexport default Users;","import {AppStateType} from \"./reduxStore\";\r\n\r\nexport const getUsers = (state: AppStateType) => {\r\n    return state.usersPage.users;\r\n};\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n    return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n    return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress;\r\n};","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    unfollow,\r\n    // Thunk\r\n    requestUsers\r\n} from \"../../redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport styles from \"./usersContainer.module.css\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getUsers,\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount\r\n} from \"../../redux/usersSelectors\";\r\nimport {UserType} from \"../../types/types\";\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport TitleSection from \"../StyledComponents/TitleSection\";\r\nimport Section from \"../StyledComponents/Section\";\r\nimport Container from \"../StyledComponents/Container\";\r\nimport Flex from \"../StyledComponents/Flex\";\r\n\r\n\r\n// Type (TS)\r\ntype MapStatePropsType = {\r\n    currentPage: number\r\n    pageSize: number\r\n    isFetching: boolean\r\n    totalUsersCount: number\r\n    users: Array<UserType>\r\n    followingInProgress: Array<number>\r\n\r\n    // Style\r\n    background?: string\r\n    backgroundUser?: string\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    requestUsers: (currentPage: number, pageSize: number) => void\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\ntype OwnPropsType = {}\r\n\r\n// Общий тип props-ов\r\ntype PropsType = MapStatePropsType & MapDispatchPropsType & OwnPropsType\r\n\r\n\r\n\r\n// CC\r\n// class UsersContainer extends React.Component<PropsType, StateType> { ... } // Для расширенного примера\r\nclass UsersContainer extends React.Component<PropsType> {\r\n    // // Если конструктор только расширяет наш класс (см. ниже), то его можно не писать !\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    // При успешной загрузке компонентов\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    // Изменение страницы пользователей\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {pageSize} = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Section height='100%' background={this.props.background}>\r\n                <Flex justify='center'>\r\n                    <Container padding='10px 30px' maxWidth='700px'>\r\n                        <TitleSection title='Users' />\r\n\r\n                        {/*{this.props.isFetching ? <Preloader/> : null}*/}\r\n\r\n                        <Users totalUsersCount={this.props.totalUsersCount}\r\n                               pageSize={this.props.pageSize}\r\n                               currentPage={this.props.currentPage}\r\n                               onPageChanged={this.onPageChanged}\r\n                               users={this.props.users}\r\n                               follow={this.props.follow}\r\n                               unfollow={this.props.unfollow}\r\n                               followingInProgress={this.props.followingInProgress}\r\n                               backgroundUser={this.props.backgroundUser}\r\n                        />\r\n                    </Container>\r\n                </Flex>\r\n            </Section>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\n// Старая версия\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// };\r\n\r\n\r\n// Новая версия\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state),\r\n\r\n        // Style\r\n        background: state.app.theme.section.background,\r\n        backgroundUser: state.app.theme.section.backgroundSecondary\r\n    }\r\n};\r\n\r\n\r\n// Функция compose (хорошая практика)\r\nexport default compose(\r\n    connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(\r\n        mapStateToProps,\r\n    {\r\n        follow,\r\n        unfollow,\r\n        // Thunk\r\n        requestUsers\r\n    }),\r\n    //withAuthRedirect // Работа с HOC\r\n) (UsersContainer);\r\n\r\n\r\n//// Аналогичный код mapDispatchToProps (connect делает проеобразование автоматически)\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (userId) => {\r\n//             dispatch(followAC(userId))\r\n//         },\r\n//\r\n//         unfollow: (userId) => {\r\n//             dispatch(unfollowAC(userId))\r\n//         },\r\n//\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//\r\n//         setCurrentPage: (pageNumber) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//\r\n//         setTotalUsersCount: (totalCount) => {\r\n//             dispatch(setUsersTotalCountAC(totalCount))\r\n//         },\r\n//\r\n//         toggleIsFetching: (isFetching) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n//\r\n//     };\r\n// };\r\n// export default connect(mapStateToProps, mapDispatchToProps) (UsersContainer);","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Checkbox, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"./../common/FormsControls/FormControls.module.css\"\r\nimport {AppStateType} from \"../../redux/reduxStore\";\r\nimport TitleSection from \"../StyledComponents/TitleSection\";\r\nimport styled from \"styled-components\";\r\nimport Container from \"../StyledComponents/Container\";\r\nimport Flex from \"../StyledComponents/Flex\";\r\nimport Li from \"../StyledComponents/Li\";\r\nimport Button from \"../StyledComponents/Button\";\r\n\r\n// Type (TS)\r\ntype LoginFormOwnProps = {\r\n    captchaUrl: string | null\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnProps> & LoginFormOwnProps> = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        // Redux-form прокидывает в props (handleSubmit)\r\n        <form onSubmit={handleSubmit}>\r\n            {/* Поля формы авторизации */}\r\n            <ul>\r\n                <Li>\r\n                    <Field name=\"email\" component={Input} type=\"text\" placeholder=\"Email\" validate={[required]}/>\r\n                </Li>\r\n\r\n                <Li>\r\n                    <Field name=\"password\" component={Input} type=\"password\" placeholder=\"Password\" validate={[required]}/>\r\n                </Li>\r\n\r\n                <Li>\r\n                    <label>\r\n                        <Flex align='center' padding='0 5px' height='10px' margin='0 0 35px 0'>\r\n                            <Field name=\"rememberMe\" component={Checkbox} type=\"checkbox\"/>\r\n                            <StyledRememberWrapper>remember me</StyledRememberWrapper>\r\n                        </Flex>\r\n                    </label>\r\n                </Li>\r\n\r\n                {/* Captcha */}\r\n                {captchaUrl && <Flex margin='20px 0' justify='center'><StyledCaptcha src={captchaUrl} alt=\"captcha\"/></Flex>}\r\n                {captchaUrl &&\r\n                <Li>\r\n                    <Field name=\"captcha\" component={Input} placeholder=\"Symbols from image\" validate={[required]} />\r\n                </Li>}\r\n\r\n\r\n                {/* Валидационные ошибки */}\r\n                {error && <div className={styles.formSummaryError}> {error} </div>}\r\n\r\n                <Li>\r\n                    <Button>Login</Button>\r\n                </Li>\r\n            </ul>\r\n        </form>\r\n    )\r\n};\r\n\r\n// Обертка redux-from для нашей компоненты (LoginForm)\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({\r\n    // a unique name for the form (уникальное имя для данной формы)\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\n\r\n// Type (TS)\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    captchaUrl: string | null\r\n\r\n    // Style\r\n    background?: string\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean, captcha: string) => void\r\n}\r\n\r\ntype LoginFormValuesType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\n\r\n// export type LoginFormValuesTypeKeys = keyof LoginFormValuesType // получить ключи типа\r\n// export type LoginFormValuesTypeKeys = Extract<keyof LoginFormValuesType, string> // получить только те ключи, которые имеют тип string\r\n\r\n// Основная компонента в которой будет находится наша форма (LoginReduxForm)\r\nconst Login: React.FC<MapStatePropsType & MapDispatchPropsType> = (props) => {\r\n    // Функция для получения данных форм\r\n    const onSubmit = (formData: LoginFormValuesType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\"/>\r\n    }\r\n\r\n    return (\r\n        <StyledLoginWrapper background={props.background}>\r\n            <Container padding='10px 30px'>\r\n                {/*????*/}\r\n                <Flex justify='center'>\r\n                    <div>\r\n                        <TitleSection title='Login' />\r\n\r\n                        {/* Это блок с временной информацией, на вёрстку не обращать внимание */}\r\n                        <StyledAdditionalInfoWrapper>\r\n                            <h3>Используйте следующие Email и Password:</h3>\r\n\r\n                            <ul>\r\n                                <Li margin='10px 0 5px 0'><b>Email: </b> free@samuraijs.com</Li>\r\n                                <Li><b>Password: </b> free</Li>\r\n                            </ul>\r\n                        </StyledAdditionalInfoWrapper>\r\n\r\n\r\n                        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n                    </div>\r\n\r\n                </Flex>\r\n\r\n            </Container>\r\n        </StyledLoginWrapper>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl,\r\n\r\n    // Style\r\n    background: state.app.theme.section.background\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login);\r\n\r\n// Style\r\n// Login\r\ntype StyledLoginWrapperType = {\r\n    background?: string\r\n}\r\n\r\nconst StyledLoginWrapper = styled.div<StyledLoginWrapperType>`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 100%;\r\n  background-color: ${props => props.background};\r\n`\r\n\r\n// Captcha\r\nconst StyledCaptcha = styled.img`\r\n  border-radius: 15px 15px 15px 15px;\r\n  box-shadow: 0 0 10px 1px #3672f4;\r\n`\r\n\r\n// Remember (checkbox)\r\nconst StyledRememberWrapper = styled.div`\r\n  padding-left: 15px;\r\n`\r\n\r\n// Additional Information\r\nconst StyledAdditionalInfoWrapper = styled.div`\r\n  margin: 20px 0 30px 0;\r\n  padding: 10px 15px;\r\n  border-radius: 20px 8px 20px 8px;\r\n  box-shadow: 0 0 10px 1px #3672f4;\r\n`\r\n\r\n","// Type TS\r\nlet initialState = {};\r\ntype InitialStateType = typeof initialState\r\n\r\n// Reducer\r\nconst sidebarReducer = (state = initialState, action: any) => {\r\n    return state;\r\n}\r\n\r\nexport default  sidebarReducer;","import {getAuthUserData} from \"./authReducer\";\r\nimport {InferActionsTypes} from \"./reduxStore\";\r\n\r\n// const INITIALIZED_SUCCESS = 'SN/APP/INITIALIZED-SUCCESS';\r\n\r\n// Type (TS)\r\n// Initial State App\r\nlet initialState = {\r\n    initialized: false,\r\n\r\n    theme: {\r\n        global: {\r\n            color: '#fefcf6'\r\n        },\r\n\r\n        sidebar: {\r\n            background: '#110f1a',\r\n            backgroundSecondary: '#1c1b2c'\r\n        },\r\n\r\n        section: {\r\n            background: '#34353a',\r\n            backgroundSecondary: 'rgba(48,45,77,0.34)',\r\n        },\r\n\r\n        button: {\r\n            // Active\r\n            backgroundActive: '#1c1b2c',\r\n\r\n            // Disabled\r\n            colorDisabled: '#8f8e8a',\r\n            backgroundDisabled: '#1c1b2c',\r\n        }\r\n    }\r\n};\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\n// Reducer\r\nconst appReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SN/APP/INITIALIZED-SUCCESS':\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n        default :\r\n            return state;\r\n    }\r\n};\r\n\r\n// Type (TS)\r\ntype ActionsType = InferActionsTypes<typeof actions>\r\n\r\n// Action Creator (AC)\r\nexport const actions = {\r\n    initializedSuccess: () => ({type: 'SN/APP/INITIALIZED-SUCCESS'} as const),\r\n\r\n}\r\n\r\n// Thunks creators\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    // Возвращение всех промисов ответов\r\n    Promise.all([promise]).then(() => {\r\n        // Изменение в state (initialized: true)\r\n        dispatch(actions.initializedSuccess());\r\n    })\r\n};\r\n\r\n\r\nexport default appReducer;","// BLL\r\nimport {Action, applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport appReducer from \"./appReducer\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'; // redux-from (HOC)\r\n\r\n\r\nconst rootReducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer // redux-from (reducer)\r\n});\r\n\r\n// Type (TS)\r\ntype RootReducerType =  typeof rootReducers // (globalState: AppStateType) => AppStateType\r\nexport type AppStateType = ReturnType<RootReducerType> // ReturnType - функция TS, которая возвращает тип // AppStateType = { profilePage: profileReducer, dialogsPage: ..., ...)\r\n\r\n// Type (TS) (AC)\r\nexport type InferActionsTypes<T> = T extends { [key: string]: (...args: any[]) => infer U } ? U : never\r\n\r\n// Type (TS) (Thunk)\r\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A> // Второй вариант (рекомендасьон от Redux)\r\n\r\n// Расширение Redux\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\n// const store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n// @ts-ignore\r\nwindow.__store__ = store;\r\n\r\nexport default  store;","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport {BrowserRouter, HashRouter, Redirect, Route, withRouter} from \"react-router-dom\";\n// import HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store, {AppStateType} from \"./redux/reduxStore\";\nimport {withSuspense} from \"./hoc/withSuspense\";\nimport {initializeApp} from \"./redux/appReducer\";\nimport Flex from \"./components/StyledComponents/Flex\";\nimport styled, {createGlobalStyle} from \"styled-components\";\nimport Container from \"./components/StyledComponents/Container\";\n\n\n// Style Global\n// Type (TS)\ntype GlobalType = {\n    color: string\n}\n\n// Style\nconst Global = createGlobalStyle<GlobalType>`\n  * {\n    margin: 0;\n    padding: 0;\n    \n    font-family: -apple-system, BlinkMacSystemFont, Segoe UI,Helvetica, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji;\n    font-size: 16px;\n    line-height: 1.5;\n    text-decoration: none;\n    color: ${props => props.color};\n    \n    box-sizing: border-box;\n  }\n  \n  ul {\n    padding-left: 0;\n  }\n\n  li {\n    list-style-type: none;\n  }\n`\n\n\n\n// Lazy loaded\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\n// Type (TS)\ntype MapPropsType = {\n    initialized: boolean\n} & GlobalType\ntype DispatchPropsType = {\n    initializeApp: () => void\n}\n\n// (HOC) Component\nconst SuspenseProfile = withSuspense(ProfileContainer);\n\n// CC\nclass App extends React.Component<MapPropsType & DispatchPropsType> {\n    // catchAllUnhandledErrors = (e: PromiseRejectionEvent) => {\n    //     alert(\"Упс... ошибочка!\");\n    // }\n\n    componentDidMount() {\n        // Dispatch(thunk)\n        this.props.initializeApp();\n\n        // Error handling\n        // window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    // componentWillUnmount() {\n    //     // Удаление прослушивания при удалении компоненты (уборка мусора)\n    //     window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    // }\n\n    render() {\n\n        // if (!this.props.initialized) {\n        //     return <Preloader/>\n        // }\n\n        return (\n            <>\n                <Global color={this.props.color} />\n\n\n                <div>\n                    {/*<HeaderContainer/>*/}\n                    <Flex>\n                        <Navbar />\n\n                        <Container>\n                            {/* Редирект на страницу профиля */}\n                            <Redirect from=\"/\" to=\"/profile\" />\n\n                            <Route path=\"/profile/:userId?\" render={() => <SuspenseProfile />} />\n\n                            {/*Для примера Роутнинг диалогов в старом варианте*/}\n                            <Route path=\"/dialogs\" render={() => {\n                                return (\n                                    <React.Suspense fallback={<div>Loading...</div>}>\n                                        <DialogsContainer/>\n                                    </React.Suspense>\n                                )\n                            }}/>\n\n                            <Route path=\"/users\" render={() => <UsersContainer />}/>\n\n                            <Route path=\"/login\" render={() => <LoginPage />}/>\n                        </Container>\n                    </Flex>\n                </div>\n            </>\n        );\n    }\n};\n\n\nconst mapStateToProps = (state: AppStateType) => ({\n    initialized: state.app.initialized,\n    color: state.app.theme.global.color\n});\n\n\n// App оборачиваем в контейнерную компоненту для передачи в неё необходимых данных\nconst AppContainer = compose<React.ComponentType>(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))\n(App);\n\n\n// Дополнительная FC нужна для проведения тестов\nconst SamuraiJSApp: React.FC = () => {\n    return (\n        <HashRouter>\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        </HashRouter>\n    )\n};\n\nexport default SamuraiJSApp;\n","import React from \"react\";\r\n\r\n\r\n// HOC\r\nexport function withSuspense<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n    return (props: WCP) => {\r\n        return (\r\n            <React.Suspense fallback={<div>Loading...</div>}>\r\n                <WrappedComponent {...props} />\r\n            </React.Suspense>\r\n        )\r\n    };\r\n}","// UI\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from \"./App\";\n\n\n// let rerenderEntireTree = () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <SamuraiJSApp />\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n// }\n\n\n\n\n// Старая версия\n// rerenderEntireTree();\n\n// store.subscribe(() => {\n//     let state = store.getState();\n//     rerenderEntireTree(state);\n// })\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","import React from 'react';\r\nimport styled, {css} from \"styled-components\";\r\n\r\n// Type (TS)\r\ntype PropsType = {\r\n    onClick?: () => void\r\n    disabled?: boolean\r\n} & StyledButtonType\r\n\r\nconst Button: React.FC<PropsType> = (props) => {\r\n    return <StyledButton onClick={props.onClick} {...props} />\r\n};\r\n\r\n// Style\r\ntype StyledButtonType = {\r\n    margin?: string\r\n    padding?: string\r\n    disabled?: boolean\r\n}\r\n\r\nconst StyledButton = styled.button<StyledButtonType>`\r\n  margin: ${props => props.margin};\r\n  padding: ${props => props.padding || '10px 38px'};\r\n  border-radius: 30px;\r\n  border-width: 0;\r\n\r\n  background-color: rgba(54, 114, 244, 0.6);\r\n  outline: none;\r\n  \r\n  &:hover {\r\n    box-shadow: 0 0 10px 1px #3672f4;\r\n    background-color: rgba(54, 114, 244, 1);\r\n  }\r\n  \r\n  ${props => props.disabled && css`\r\n    &:hover {\r\n      background-color: rgba(54, 114, 244, 0.3);\r\n      box-shadow: none;\r\n    }\r\n\r\n    background-color: rgba(54, 114, 244, 0.3);\r\n  `}\r\n`\r\n\r\nexport default Button;","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\"\r\nimport {WrappedFieldMetaProps, WrappedFieldProps} from \"redux-form\";\r\nimport styled, {css} from \"styled-components\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/reduxStore\";\r\n\r\n// Данная компонента нужна для того, чтобы избежать дублирование кода в обёртках (ниже)\r\n// Type (TS)\r\ntype FormControlPropsType = {\r\n    meta: WrappedFieldMetaProps\r\n    // children: React.ReactNode // Эта типизация происходит автоматически (её не нужно делать)\r\n}\r\n\r\nconst FormControl: React.FC<FormControlPropsType> = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n\r\n            {hasError && <StyledMessageErrorWrapper>{error}</StyledMessageErrorWrapper>}\r\n        </div>\r\n    )\r\n};\r\n\r\n// Style\r\nconst StyledMessageErrorWrapper = styled.div`\r\n  margin-top: 5px;\r\n  padding-left: 5px;\r\n  color: rgba(244, 67, 54, 0.7);\r\n`\r\n\r\n// FormItems\r\n// Textarea\r\n// Данные элементы являются обёртками стандартных элементов ввода для дальнейшего взаимодействия с ними\r\nconst TextareaItem: React.FC<WrappedFieldProps> = (props) => {\r\n    // const {input, meta, child, ...restProps} = props;\r\n    const {input, meta, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <StyledTextarea {...input} {...restProps} />\r\n            {/*<textarea {...input} {...restProps} />*/}\r\n        </FormControl>\r\n    )\r\n};\r\n\r\n// Input\r\nconst InputItem: React.FC<mapStateToProps> = (props) => {\r\n    // const {input, meta, child, ...restProps} = props;\r\n    const {input, meta, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <StyledInput {...input} {...restProps} background={props.background} />\r\n            {/*<input {...input} {...restProps} />*/}\r\n        </FormControl>\r\n    )\r\n};\r\n\r\n// CheckBox\r\nexport const Checkbox: React.FC<mapStateToProps> = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n};\r\n\r\n// Type (TS)\r\ntype mapStateToProps = {\r\n    background?: string\r\n} & WrappedFieldProps\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        background: state.app.theme.button.backgroundActive\r\n    }\r\n}\r\n\r\nexport const Input = connect(mapStateToProps, {}) (InputItem)\r\nexport const Textarea = connect(mapStateToProps, {}) (TextareaItem)\r\n\r\n\r\n// Style\r\n// Input\r\ntype StyledFormItemTextType = {\r\n    background?: string\r\n    fullWidth?: boolean\r\n}\r\n\r\nconst StyledInput = styled.input<StyledFormItemTextType>`\r\n  padding: 10px 10px;\r\n  border-radius: 15px;\r\n  border-width: 0;\r\n  width: 100%;\r\n  outline: none;\r\n  \r\n  background-color: ${props => props.background};\r\n  \r\n  &:focus {\r\n    box-shadow: 0 0 10px 2px #3672f4;\r\n  }\r\n  \r\n  &::placeholder {\r\n    //color: white;\r\n  }\r\n`\r\n\r\nconst StyledTextarea = styled.textarea<StyledFormItemTextType>`\r\n  padding: 10px 10px;\r\n  min-height: 50px;\r\n  border-radius: 15px;\r\n  border-width: 0;\r\n  width: 100%;\r\n  outline: none;\r\n  resize: vertical;\r\n  \r\n  background-color: ${props => props.background};\r\n  \r\n  &:focus {\r\n    box-shadow: 0 0 10px 2px #3672f4;\r\n  }\r\n  \r\n  &::placeholder {\r\n    //color: white;\r\n`","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__256RD\",\"error\":\"FormControls_error__w4shk\",\"formSummaryError\":\"FormControls_formSummaryError__1gb9J\"};","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\n// Type (TS)\r\ntype PropsType = {\r\n    title: string\r\n}\r\n\r\nconst TitleSection: React.FC<PropsType> = (props) => {\r\n    return <StyledTitle>{props.title}</StyledTitle>\r\n};\r\n\r\nexport default TitleSection;\r\n\r\n// Style\r\nconst StyledTitle = styled.h2`\r\n  font-size: 40px;\r\n`","// Type (TS)\r\nexport type FieldValidatorType = (value: string) => string | undefined\r\n\r\n// Validators\r\nexport const required: FieldValidatorType = (value) => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength: number): FieldValidatorType => (values) => {\r\n    if (values && values.length > maxLength)  return `Max length is ${maxLength} symbols`;\r\n\r\n    return  undefined;\r\n}","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\n// Type (TS)\r\ntype PropsType = StyledFlexType\r\n\r\nconst Flex: React.FC<PropsType> = (props) => {\r\n    return <StyledFlex {...props} />\r\n};\r\n\r\n// Style\r\ntype StyledFlexType = {\r\n    direction?: string\r\n    justify?: string\r\n    align?: string\r\n    margin?: string\r\n    padding?: string\r\n    height?: string\r\n    maxWidth?: string\r\n    width?: string\r\n    borderRadius?: string\r\n    background?: string\r\n    boxShadow?: string\r\n\r\n}\r\n\r\nconst StyledFlex = styled.div<StyledFlexType>`\r\n  display: flex;\r\n  flex-direction: ${props => props.direction || 'row'};\r\n  justify-content: ${props => props.justify || 'stretch'};\r\n  align-items: ${props => props.align || 'stretch'};\r\n  \r\n  margin: ${props => props.margin || '0'};\r\n  padding: ${props => props.padding || '0'};\r\n  height: ${props => props.height};\r\n  max-width: ${props => props.maxWidth};\r\n  width: ${props => props.width};\r\n  border-radius: ${props => props.borderRadius};\r\n  background-color: ${props => props.background};\r\n  box-shadow: ${props => props.boxShadow};\r\n  \r\n`\r\n\r\nexport default Flex;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageNumber\":\"Paginator_pageNumber__3wrV8\",\"selectedPage\":\"Paginator_selectedPage__1IWls\"};","export default __webpack_public_path__ + \"static/media/user.bc82f5f4.png\";"],"sourceRoot":""}