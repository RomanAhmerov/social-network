{"version":3,"sources":["redux/dialogsReducer.js","components/Users/User/user.module.css","api/api.js","components/Users/users.module.css","components/Navbar/Navbar.module.css","components/Navbar/Navbar.jsx","utils/helpers/objectHelpers.js","redux/usersReducer.js","components/common/Paginator/Paginator.jsx","assets/images/user.png","components/Users/User/User.jsx","components/Users/Users.jsx","redux/usersSelectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/authReducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/appReducer.js","redux/sidebarReducer.js","redux/reduxStore.js","App.js","hoc/withSuspense.js","index.js","components/common/FormsControls/FormControls.module.css","components/common/FormsControls/FormsControls.js","assets/images/preloader.svg","components/common/Preloader/Preloader.js","utils/validators/validators.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redux/profileReducer.js"],"names":["SEND_MESSAGE","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","instance","axios","baseURL","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Navbar","className","s","nav","item","to","activeClassName","activeLink","updateObjectInArray","items","itemId","objPropName","newObjProps","map","i","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","selectedPage","e","User","user","src","photos","small","userPhoto","alt","disabled","some","Users","props","u","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","requestUsers","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","Field","component","Input","placeholder","validate","required","formSummaryError","length","stopSubmit","_error","formData","INITIALIZED_SUCCESS","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","app","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","Suspense","fallback","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","basename","process","ReactDOM","StrictMode","document","getElementById","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","preloader","style","backgroundColor","value","maxLengthCreator","maxLength","values","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId"],"mappings":"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","file":"static/js/main.3960b80d.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is are your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'},\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n\r\n            return  {...state, messages: [...state.messages, {id: 12, message: body}]};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\nexport default  dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"user_userPhoto__sqLFn\",\"selectedPage\":\"user_selectedPage__5J-Pq\",\"paginationWrapper\":\"user_paginationWrapper__1Q_Pl\"};","// DAL (Data Access Layer)\r\nimport * as axios from \"axios\";\r\n\r\n// Шаблон для API\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"797821ca-5e62-4458-9aa9-8c6476b8b275\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    // Users\r\n    getUsers(currentPage, pageSize) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n\r\n    follow (userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n\r\n    unfollow (userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n\r\n    // Profile (переделегирование) (backward responsibility)\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please use profileAPI object')\r\n        return profileAPI.getProfile(userId);\r\n    },\r\n};\r\n\r\n\r\nexport const profileAPI = {\r\n    // Profile\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n\r\n    },\r\n\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`);\r\n\r\n    },\r\n\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n\r\n    },\r\n};\r\n\r\n\r\nexport const authAPI = {\r\n    // Header\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n\r\n        // Логинизация и выход\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1E94F\",\"selectedPage\":\"users_selectedPage__1uKXP\",\"paginationWrapper\":\"users_paginationWrapper__3rFqo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3orgJ\",\"item\":\"Navbar_item__30L5Y\",\"activeLink\":\"Navbar_activeLink__3HkE3\"};","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(i => {\r\n        if (i[objPropName] === itemId) {\r\n            return {...i, ...newObjProps};\r\n        }\r\n\r\n        return i;\r\n    });\r\n};","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/helpers/objectHelpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\n// Reducer\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            };\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            };\r\n\r\n        case SET_USERS:\r\n            return {...state, users: action.users};\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage};\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.count};\r\n\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            };\r\n\r\n        default :\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n// Action Creator (AC)\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\n\r\n// Thunk Creators\r\nexport const requestUsers = (page, pageSize) => {\r\n    // Thunk\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page))\r\n\r\n        const data = await usersAPI.getUsers(page, pageSize);\r\n\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    };\r\n};\r\n\r\n\r\n// (Функция для предотвращения дублирования (follow, unfollow))\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n\r\n    const response = await apiMethod(userId);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n};\r\n\r\n\r\nexport const follow = (userId) => {\r\n    // Thunk\r\n    return (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    };\r\n};\r\n\r\nexport const unfollow = (userId) => {\r\n    // Thunk\r\n    return (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    };\r\n};\r\n\r\n\r\nexport default usersReducer;","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n    // Кол-во страниц\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    // Кол-во порций\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n    return (\r\n        <div className={styles.paginator}>\r\n            {portionNumber > 1 &&\r\n            <button onClick={() => {setPortionNumber(portionNumber - 1)}}>PREV</button>}\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map((p) => {\r\n                    return <span key={p} className={currentPage === p ? styles.selectedPage : null}\r\n                                 onClick={(e) => {\r\n                                     onPageChanged(p)\r\n                                 }}>{p}</span>\r\n                })}\r\n\r\n            {portionNumber < portionCount &&\r\n            <button onClick={() => {setPortionNumber(portionNumber + 1)}}>NEXT</button>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/user.ab7efdc7.png\";","import React from \"react\";\r\nimport styles from \"./user.module.css\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = ({user, followingInProgress, follow, unfollow}) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto} alt=\"userPhoto\"/>\r\n                    </NavLink>\r\n                </div>\r\n\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      unfollow(user.id);\r\n                                  }}>Unfollow</button>\r\n\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                  onClick={() => {\r\n                                      follow(user.id);\r\n                                  }}>Follow</button>}\r\n                </div>\r\n            </span>\r\n\r\n            <span>\r\n                <span>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </span>\r\n\r\n                <span>\r\n                    <div>{\"user.location.city\"}</div>\r\n                    <div>{\"user.location.country\"}</div>\r\n                </span>\r\n            </span>\r\n        </div>)\r\n\r\n};\r\n\r\nexport default User;","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User/User\";\r\n\r\nconst Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return (\r\n        <div>\r\n            <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                       totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n\r\n            <div>\r\n                {\r\n                    users.map(u => <User key={u.id} user={u}\r\n                                         followingInProgress={props.followingInProgress}\r\n                                         follow={props.follow}\r\n                                         unfollow={props.unfollow}/>)\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Users;","export const getUsers = (state) => {\r\n    return state.usersPage.users;\r\n};\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n};","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow,\r\n    // Thunk\r\n    requestUsers\r\n} from \"../../redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport styles from \"./usersContainer.module.css\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getUsers,\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount\r\n} from \"../../redux/usersSelectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    // // Если конструктор только расширяет наш класс (см. ниже), то его можно не писать !\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    // При успешной загрузке компонентов\r\n    componentDidMount() {\r\n        // ???\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.requestUsers(currentPage, pageSize);\r\n    }\r\n\r\n    // Изменение страницы пользователей\r\n    onPageChanged = (pageNumber) => {\r\n        // ????\r\n        const {pageSize} = this.props;\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n\r\n    }\r\n}\r\n\r\n\r\n// Старая версия\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// };\r\n\r\n\r\n// Новая версия\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\n\r\n\r\n// Функция compose (хорошая практика)\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n    {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        // Thunk\r\n        requestUsers\r\n    }),\r\n    //withAuthRedirect // Работа с HOC\r\n) (UsersContainer);\r\n\r\n\r\n//// Аналогичный код mapDispatchToProps (connect делает проеобразование автоматически)\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (userId) => {\r\n//             dispatch(followAC(userId))\r\n//         },\r\n//\r\n//         unfollow: (userId) => {\r\n//             dispatch(unfollowAC(userId))\r\n//         },\r\n//\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//\r\n//         setCurrentPage: (pageNumber) => {\r\n//             dispatch(setCurrentPageAC(pageNumber))\r\n//         },\r\n//\r\n//         setTotalUsersCount: (totalCount) => {\r\n//             dispatch(setUsersTotalCountAC(totalCount))\r\n//         },\r\n//\r\n//         toggleIsFetching: (isFetching) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n//\r\n//     };\r\n// };\r\n// export default connect(mapStateToProps, mapDispatchToProps) (UsersContainer);","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src='http://pngimg.com/uploads/car_logo/car_logo_PNG1640.png' />\r\n\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET-USER-DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\n// Reducer\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n\r\n        default :\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n// Action Creator (AC)\r\nconst setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\n\r\n// Thunks creators\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    // Возвращение общего promise (me + then) для инициализации, код также выполняет свои действия*\r\n    let response = await authAPI.me();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n    ;\r\n};\r\n\r\n// Логинизация и выход\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        // Dispatch thunk\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        // Обработка серверной валидации с redux-form\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message})); // Dispatch action creator (AC) stopSubmit\r\n    }\r\n\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n        // Dispatch thunk\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    };\r\n};\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"./../common/FormsControls/FormControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        // Redux-form прокидывает в props (handleSubmit)\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <Field name=\"email\" component={Input} type=\"text\" placeholder=\"Email\" validate={[required]} />\r\n            </div>\r\n\r\n            <div>\r\n                <Field name=\"password\" component={Input} type=\"password\" placeholder=\"Password\" validate={[required]} />\r\n            </div>\r\n\r\n            <div>\r\n                <Field name=\"rememberMe\" component={Input} type=\"checkbox\" /> remember me\r\n            </div>\r\n\r\n            {error && <div className={styles.formSummaryError}> {error} </div> }\r\n\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\n// Обертка redux-from для нашей компоненты (LoginForm)\r\nconst LoginReduxForm = reduxForm({\r\n    // a unique name for the form (уникальное имя для данной формы)\r\n    form: 'login'\r\n})(LoginForm);\r\n\r\n// Основная компонента в которой будет находится наша форма (LoginReduxForm)\r\nconst Login = (props) => {\r\n    // Функция для получения данных форм\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to=\"/profile\" />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login}) (Login);","import {getAuthUserData} from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED-SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\n// Reducer\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n\r\n        default :\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\n// Action Creator (AC)\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\n// Thunks creators\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n\r\n    // Возвращение всех промисов ответов\r\n    Promise.all([promise]).then(() => {\r\n        // Изменение в state (initialized: true)\r\n        dispatch(initializedSuccess());\r\n    })\r\n};\r\n\r\n\r\nexport default appReducer;","\r\n\r\nlet initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n\r\n    return state;\r\n}\r\n\r\nexport default  sidebarReducer;","// BLL\r\nimport {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport appReducer from \"./appReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'; // redux-from (HOC)\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer // redux-from (reducer)\r\n});\r\n\r\n// Расширение Redux\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n\r\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n// window.__store__ = store;\r\n\r\nexport default  store;","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/appReducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/reduxStore\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\n// Lazy loaded\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\n\nclass App extends React.Component {\n    componentDidMount() {\n        // Dispatch(thunk)\n        this.props.initializeApp();\n    }\n\n    render() {\n\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path=\"/profile/:userId?\" render={withSuspense(ProfileContainer)} />\n\n                    {/*<Route path=\"/dialogs\" render={withSuspense(DialogsContainer)}/>*/}\n\n                    <Route path=\"/dialogs\" render={() => {\n                        return (\n                            <React.Suspense fallback={<div>Loading...</div>}>\n                                <DialogsContainer/>\n                            </React.Suspense>\n                        )\n                    }}/>\n\n\n                    <Route path=\"/users\" render={() => <UsersContainer/>}/>\n\n                    <Route path=\"/login\" render={() => <LoginPage/>}/>\n                </div>\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\n\nconst AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))\n(App);\n\n\nexport const SamuraiJSApp = (props) => {\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        </BrowserRouter>\n    )\n};\n\nexport default SamuraiJSApp;","import React from \"react\";\r\n\r\n\r\n// HOC\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return (\r\n            <React.Suspense fallback={<div>Loading...</div>}>\r\n                <Component {...props} />\r\n            </React.Suspense>\r\n        )\r\n    };\r\n}","// UI\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from \"./App\";\n\n\n// let rerenderEntireTree = () => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <SamuraiJSApp />\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n// }\n\n\n// Старая версия\n// rerenderEntireTree();\n\n// store.subscribe(() => {\n//     let state = store.getState();\n//     rerenderEntireTree(state);\n// })\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__256RD\",\"error\":\"FormControls_error__w4shk\",\"formSummaryError\":\"FormControls_formSummaryError__1gb9J\"};","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\"\r\n\r\n// Данная компонента нужна для того, чтобы избежать дублирование кода в обёртках (ниже)\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\n// Данные элементы являются обёртками стандартных элементов ввода для дальнейшего взаимодействия с ними\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <textarea {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (\r\n        <FormControl {...props}>\r\n            <input {...input} {...restProps} />\r\n        </FormControl>\r\n    )\r\n};\r\n\r\n// Старая версия\r\n// export const Textarea = ({input, meta, ...props}) => {\r\n//     const hasError = meta.touched && meta.error;\r\n//\r\n//     return (\r\n//         <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n//             <div>\r\n//                 <textarea {...input} {...props} />\r\n//             </div>\r\n//\r\n//             {hasError && <span>{meta.error}</span>}\r\n//         </div>\r\n//     )\r\n// };","export default __webpack_public_path__ + \"static/media/preloader.4046923e.svg\";","import React from \"react\";\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\n\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={preloader} style={ {backgroundColor: \"white\"} } />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","export const required = (value) => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (values) => {\r\n    if (values && values.length > maxLength)  return `Max length is ${maxLength} symbols`;\r\n\r\n    return  undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__mNApB\",\"pageNumber\":\"Paginator_pageNumber__3wrV8\",\"selectedPage\":\"Paginator_selectedPage__1IWls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1iftm\",\"loginBlock\":\"Header_loginBlock__1EZJe\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\n// const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT'; // Старая версия (*)\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst SET_STATUS = 'SET-STATUS';\r\nconst DELETE_POST = 'DELETE-POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11}\r\n    ],\r\n    // newPostText: 'it-kamasutra.com', // Старая версия (*)\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                // message: state.newPostText, // Старая версия (*)\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                // newPostText: '' // Старая версия (*)\r\n            };\r\n        }\r\n\r\n\r\n        // Старая версия\r\n        // case UPDATE_NEW_POST_TEXT: {\r\n        //     return {\r\n        //         ...state,\r\n        //         newPostText: action.newText\r\n        //     };\r\n        // };\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        }\r\n\r\n        default :\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\r\n// export const updateNewPostTextActionCreator = (text) => ({type: UPDATE_NEW_POST_TEXT, newText: text}); // Старая версия (*)\r\n\r\n\r\n// Thunks\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n\r\n    dispatch(setUserProfile(response.data));\r\n};\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n\r\n    dispatch(setStatus(response.data));\r\n};\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    };\r\n};\r\n\r\nexport default profileReducer;"],"sourceRoot":""}